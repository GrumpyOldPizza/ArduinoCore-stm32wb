/*
 * Copyright (c) 2019-2020 Thomas Roell.  All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal with the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 *  1. Redistributions of source code must retain the above copyright notice,
 *     this list of conditions and the following disclaimers.
 *  2b. Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimers in the
 *     documentation and/or other materials provided with the distribution.
 *  3. Neither the name of Thomas Roell, nor the names of its contributors
 *     may be used to endorse or promote products derived from this Software
 *     without specific prior written permission.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * WITH THE SOFTWARE.
 */

	.arch armv7e-m

	.syntax unified

	.global	armv7m_pdm_cic4_x16_be
	.global	armv7m_pdm_cic4_x16_be_left
	.global	armv7m_pdm_cic4_x16_be_right
	.global	armv7m_pdm_cic4_x16_le
	.global	armv7m_pdm_hbf15_x2
	.global	armv7m_pdm_fir64_x2_mono
	.global	armv7m_pdm_fir64_x2_stereo
	.global	armv7m_pdm_fir64_x2_discard

        .section .data.armv7m_pdm_cic4_lut
	.align	3
armv7m_pdm_cic4_lut:
	.int	0xd6d888dc, 0xd71a8ade, 0xd7da8ee0, 0xd81c90e2
	.int	0xd95a94e2, 0xd99c96e4, 0xda5c9ae6, 0xda9e9ce8
	.int	0xdbda9ce4, 0xdc1c9ee6, 0xdcdca2e8, 0xdd1ea4ea
	.int	0xde5ca8ea, 0xde9eaaec, 0xdf5eaeee, 0xdf80b0f0
	.int	0xdf9aa6e6, 0xdfdca8e8, 0xe09cacea, 0xe0deaeec
	.int	0xe21cb2ec, 0xe25eb4ee, 0xe31eb8f0, 0xe340baf2
	.int	0xe49cbaee, 0xe4debcf0, 0xe59ec0f2, 0xe5c0c2f4
	.int	0xe71ec6f4, 0xe740c8f6, 0xe800ccf8, 0xe842cefa
	.int	0xe4dab2e8, 0xe51cb4ea, 0xe5dcb8ec, 0xe61ebaee
	.int	0xe75cbeee, 0xe79ec0f0, 0xe85ec4f2, 0xe880c6f4
	.int	0xe9dcc6f0, 0xea1ec8f2, 0xeadeccf4, 0xeb00cef6
	.int	0xec5ed2f6, 0xec80d4f8, 0xed40d8fa, 0xed82dafc
	.int	0xed9cd0f2, 0xedded2f4, 0xee9ed6f6, 0xeec0d8f8
	.int	0xf01edcf8, 0xf040defa, 0xf100e2fc, 0xf142e4fe
	.int	0xf29ee4fa, 0xf2c0e6fc, 0xf380eafe, 0xf3c2ec00
	.int	0xf500f000, 0xf542f202, 0xf602f604, 0xf644f806
	.int	0xebdac0ea, 0xec1cc2ec, 0xecdcc6ee, 0xed1ec8f0
	.int	0xee5cccf0, 0xee9ecef2, 0xef5ed2f4, 0xef80d4f6
	.int	0xf0dcd4f2, 0xf11ed6f4, 0xf1dedaf6, 0xf200dcf8
	.int	0xf35ee0f8, 0xf380e2fa, 0xf440e6fc, 0xf482e8fe
	.int	0xf49cdef4, 0xf4dee0f6, 0xf59ee4f8, 0xf5c0e6fa
	.int	0xf71eeafa, 0xf740ecfc, 0xf800f0fe, 0xf842f200
	.int	0xf99ef2fc, 0xf9c0f4fe, 0xfa80f800, 0xfac2fa02
	.int	0xfc00fe02, 0xfc420004, 0xfd020406, 0xfd440608
	.int	0xf9dceaf6, 0xfa1eecf8, 0xfadef0fa, 0xfb00f2fc
	.int	0xfc5ef6fc, 0xfc80f8fe, 0xfd40fc00, 0xfd82fe02
	.int	0xfedefefe, 0xff000000, 0xffc00402, 0x00020604
	.int	0x01400a04, 0x01820c06, 0x02421008, 0x0284120a
	.int	0x029e0800, 0x02c00a02, 0x03800e04, 0x03c21006
	.int	0x05001406, 0x05421608, 0x06021a0a, 0x06441c0c
	.int	0x07801c08, 0x07c21e0a, 0x0882220c, 0x08c4240e
	.int	0x0a02280e, 0x0a442a10, 0x0b042e12, 0x0b463014
	.int	0xf4dad0ec, 0xf51cd2ee, 0xf5dcd6f0, 0xf61ed8f2
	.int	0xf75cdcf2, 0xf79edef4, 0xf85ee2f6, 0xf880e4f8
	.int	0xf9dce4f4, 0xfa1ee6f6, 0xfadeeaf8, 0xfb00ecfa
	.int	0xfc5ef0fa, 0xfc80f2fc, 0xfd40f6fe, 0xfd82f800
	.int	0xfd9ceef6, 0xfddef0f8, 0xfe9ef4fa, 0xfec0f6fc
	.int	0x001efafc, 0x0040fcfe, 0x01000000, 0x01420202
	.int	0x029e02fe, 0x02c00400, 0x03800802, 0x03c20a04
	.int	0x05000e04, 0x05421006, 0x06021408, 0x0644160a
	.int	0x02dcfaf8, 0x031efcfa, 0x03de00fc, 0x040002fe
	.int	0x055e06fe, 0x05800800, 0x06400c02, 0x06820e04
	.int	0x07de0e00, 0x08001002, 0x08c01404, 0x09021606
	.int	0x0a401a06, 0x0a821c08, 0x0b42200a, 0x0b84220c
	.int	0x0b9e1802, 0x0bc01a04, 0x0c801e06, 0x0cc22008
	.int	0x0e002408, 0x0e42260a, 0x0f022a0c, 0x0f442c0e
	.int	0x10802c0a, 0x10c22e0c, 0x1182320e, 0x11c43410
	.int	0x13023810, 0x13443a12, 0x14043e14, 0x14464016
	.int	0x09dc08fa, 0x0a1e0afc, 0x0ade0efe, 0x0b001000
	.int	0x0c5e1400, 0x0c801602, 0x0d401a04, 0x0d821c06
	.int	0x0ede1c02, 0x0f001e04, 0x0fc02206, 0x10022408
	.int	0x11402808, 0x11822a0a, 0x12422e0c, 0x1284300e
	.int	0x129e2604, 0x12c02806, 0x13802c08, 0x13c22e0a
	.int	0x1500320a, 0x1542340c, 0x1602380e, 0x16443a10
	.int	0x17803a0c, 0x17c23c0e, 0x18824010, 0x18c44212
	.int	0x1a024612, 0x1a444814, 0x1b044c16, 0x1b464e18
	.int	0x17de3206, 0x18003408, 0x18c0380a, 0x19023a0c
	.int	0x1a403e0c, 0x1a82400e, 0x1b424410, 0x1b844612
	.int	0x1cc0460e, 0x1d024810, 0x1dc24c12, 0x1e044e14
	.int	0x1f425214, 0x1f845416, 0x20445818, 0x20865a1a
	.int	0x20805010, 0x20c25212, 0x21825614, 0x21c45816
	.int	0x23025c16, 0x23445e18, 0x2404621a, 0x2446641c
	.int	0x25826418, 0x25c4661a, 0x26846a1c, 0x26c66c1e
	.int	0x2804701e, 0x28467220, 0x29067622, 0x29487824

        .section .data.armv7m_pdm_hbf15_coeff
	.align	3
armv7m_pdm_hbf15_coeff:
	.short	-122, 674, -2370, 10006, 16383, 10006

        .section .data.armv7m_pdm_fir64_coeff
	.align	3
armv7m_pdm_fir64_coeff:
	.short	1, -1, -4, 1, 10, 2, -21, -12, 35, 35, -49, -77, 52, 142, -30, -228, -36, 327, 166, -416, -383, 464, 708, -419, -1171, 200, 1836, 377, -2924, -1985, 5789, 14003

	// void armv7m_pdm_cic4_16x(int16_t *output, const uint8_t *input, uint32_t count, armv7m_pdm_cic_state_t *state);
	// void armv7m_pdm_cic4_16x_left(int16_t *output, const uint8_t *input, uint32_t count, armv7m_pdm_cic_state_t *state);
	// void armv7m_pdm_cic4_16x_right(int16_t *output, const uint8_t *input, uint32_t count, armv7m_pdm_cic_state_t *state);
	//
	// R0 is OUTPUT
	// R1 is INPUT
	// R2 is COUNT
	// R3 is STATE

#define CIC_STACK_STATE 0
	
#define CIC_OUTPUT   r0 
#define CIC_INPUT    r1
#define CIC_DATA     r2
#define CIC_ACC0     r3
#define CIC_ACC1     r4
#define CIC_ACC2     r5
#define CIC_ACC3_E   r6
#define CIC_ACC3_O   r7

#define CIC_DLY2_0   r8
#define CIC_DLY3_0   r9
#define CIC_RESULT_0 r10
#define CIC_COEFF_1  r10
#define CIC_INDEX_1  r10
#define CIC_LIT36_1  r10
#define CIC_LIT120_1 r10
#define CIC_DLY1_0   r11
	
#define CIC_DLY3_1   r8
#define CIC_RESULT_1 r9
#define CIC_COEFF_2  r9
#define CIC_INDEX_2  r9
#define CIC_LIT36_2  r9
#define CIC_LIT120_2 r9
#define CIC_DLY1_1   r10
#define CIC_DLY2_1   r11

#define CIC_RESULT_2 r8
#define CIC_COEFF_3  r8
#define CIC_INDEX_3  r8
#define CIC_LIT36_3  r8
#define CIC_LIT120_3 r8
#define CIC_DLY1_2   r9
#define CIC_DLY2_2   r10
#define CIC_DLY3_2   r11

#define CIC_DLY1_3   r8
#define CIC_DLY2_3   r9
#define CIC_DLY3_3   r10
#define CIC_RESULT_3 r11
#define CIC_COEFF_0  r11
#define CIC_INDEX_0  r11
#define CIC_LIT36_0  r11
#define CIC_LIT120_0 r11

#define CIC_LUT      r12
#define CIC_INPUT_E  lr


        .section .text.armv7m_pdm_cic4_x16_be, "ax"
	.thumb
	.thumb_func
	.type	armv7m_pdm_cic4_x16_be, %function
	.align	3
armv7m_pdm_cic4_x16_be:
	push	{ r3, r4-r11, lr }

	add     CIC_INPUT_E, r1, r2
	mov.w	r12, r3
	ldm	r12, { CIC_ACC0, CIC_ACC1, CIC_ACC2, CIC_ACC3_E, CIC_ACC3_O, CIC_DLY1_3, CIC_DLY2_3, CIC_DLY3_3 }

	movw	CIC_LUT, #:lower16:armv7m_pdm_cic4_lut
	movt	CIC_LUT, #:upper16:armv7m_pdm_cic4_lut
	
	.align	3
1:	ldr	CIC_DATA, [CIC_INPUT], #4

	mov.w	CIC_LIT120_0, #120
	mla	CIC_ACC3_E, CIC_ACC0, CIC_LIT120_0, CIC_ACC3_O
	mov.w	CIC_LIT36_0, #36
	mla	CIC_ACC3_E, CIC_ACC1, CIC_LIT36_0, CIC_ACC3_E
	add	CIC_ACC3_E, CIC_ACC3_E, CIC_ACC2, LSL #3
	mla	CIC_ACC2, CIC_ACC0, CIC_LIT36_0, CIC_ACC2
	add	CIC_ACC2, CIC_ACC2, CIC_ACC1, LSL #3
	add	CIC_ACC1, CIC_ACC1, CIC_ACC0, LSL #3
	uxtb	CIC_INDEX_0, CIC_DATA
	ldr	CIC_COEFF_0, [CIC_LUT, CIC_INDEX_0, LSL #2]
        add	CIC_ACC3_E, CIC_ACC3_E, CIC_COEFF_0, ASR #21
	sxtab	CIC_ACC2, CIC_ACC2, CIC_COEFF_0, ROR #8
	sxtab	CIC_ACC1, CIC_ACC1, CIC_COEFF_0
	sbfx    CIC_COEFF_0, CIC_COEFF_0, #16, #5
	add.w	CIC_ACC0, CIC_ACC0, CIC_COEFF_0

	mov.w	CIC_LIT120_0, #120
	mla	CIC_ACC3_E, CIC_ACC0, CIC_LIT120_0, CIC_ACC3_E
	mov.w	CIC_LIT36_0, #36
	mla	CIC_ACC3_E, CIC_ACC1, CIC_LIT36_0, CIC_ACC3_E
	add	CIC_ACC3_E, CIC_ACC3_E, CIC_ACC2, LSL #3
	mla	CIC_ACC2, CIC_ACC0, CIC_LIT36_0, CIC_ACC2
	add	CIC_ACC2, CIC_ACC2, CIC_ACC1, LSL #3
	add	CIC_ACC1, CIC_ACC1, CIC_ACC0, LSL #3
	uxtb	CIC_INDEX_0, CIC_DATA, ROR #8
	ldr	CIC_COEFF_0, [CIC_LUT, CIC_INDEX_0, LSL #2]
        add	CIC_ACC3_E, CIC_ACC3_E, CIC_COEFF_0, ASR #21
	sxtab	CIC_ACC2, CIC_ACC2, CIC_COEFF_0, ROR #8
	sxtab	CIC_ACC1, CIC_ACC1, CIC_COEFF_0
	sbfx    CIC_COEFF_0, CIC_COEFF_0, #16, #5
	add.w	CIC_ACC0, CIC_ACC0, CIC_COEFF_0

	sub.w   CIC_DLY1_0, CIC_ACC3_E, CIC_ACC3_O
	sub.w	CIC_DLY2_0, CIC_DLY1_0, CIC_DLY1_3
	sub.w	CIC_DLY3_0, CIC_DLY2_0, CIC_DLY2_3
	sub.w	CIC_RESULT_0,  CIC_DLY3_0, CIC_DLY3_3

	ssat	CIC_RESULT_0, #16, CIC_RESULT_0, ASR #1
	strh	CIC_RESULT_0, [CIC_OUTPUT], #2

	mov.w	CIC_LIT120_1, #120
	mla	CIC_ACC3_O, CIC_ACC0, CIC_LIT120_1, CIC_ACC3_E
	mov.w	CIC_LIT36_1, #36
	mla	CIC_ACC3_O, CIC_ACC1, CIC_LIT36_1, CIC_ACC3_O
	add	CIC_ACC3_O, CIC_ACC3_O, CIC_ACC2, LSL #3
	mla	CIC_ACC2, CIC_ACC0, CIC_LIT36_1, CIC_ACC2
	add	CIC_ACC2, CIC_ACC2, CIC_ACC1, LSL #3
	add	CIC_ACC1, CIC_ACC1, CIC_ACC0, LSL #3
	uxtb	CIC_INDEX_1, CIC_DATA, ROR #16
	ldr	CIC_COEFF_1, [CIC_LUT, CIC_INDEX_1, LSL #2]
        add	CIC_ACC3_O, CIC_ACC3_O, CIC_COEFF_1, ASR #21
	sxtab	CIC_ACC2, CIC_ACC2, CIC_COEFF_1, ROR #8
	sxtab	CIC_ACC1, CIC_ACC1, CIC_COEFF_1
	sbfx    CIC_COEFF_1, CIC_COEFF_1, #16, #5
	add.w	CIC_ACC0, CIC_ACC0, CIC_COEFF_1

	mov.w	CIC_LIT120_1, #120
	mla	CIC_ACC3_O, CIC_ACC0, CIC_LIT120_1, CIC_ACC3_O
	mov.w	CIC_LIT36_1, #36
	mla	CIC_ACC3_O, CIC_ACC1, CIC_LIT36_1, CIC_ACC3_O
	add	CIC_ACC3_O, CIC_ACC3_O, CIC_ACC2, LSL #3
	mla	CIC_ACC2, CIC_ACC0, CIC_LIT36_1, CIC_ACC2
	add	CIC_ACC2, CIC_ACC2, CIC_ACC1, LSL #3
	add	CIC_ACC1, CIC_ACC1, CIC_ACC0, LSL #3
	uxtb	CIC_INDEX_1, CIC_DATA, ROR #24
	ldr	CIC_COEFF_1, [CIC_LUT, CIC_INDEX_1, LSL #2]
        add	CIC_ACC3_O, CIC_ACC3_O, CIC_COEFF_1, ASR #21
	sxtab	CIC_ACC2, CIC_ACC2, CIC_COEFF_1, ROR #8
	sxtab	CIC_ACC1, CIC_ACC1, CIC_COEFF_1
	sbfx    CIC_COEFF_1, CIC_COEFF_1, #16, #5
	add.w	CIC_ACC0, CIC_ACC0, CIC_COEFF_1

	sub.w   CIC_DLY1_1, CIC_ACC3_O, CIC_ACC3_E
	sub.w	CIC_DLY2_1, CIC_DLY1_1, CIC_DLY1_0
	sub.w	CIC_DLY3_1, CIC_DLY2_1, CIC_DLY2_0
	sub.w	CIC_RESULT_1,  CIC_DLY3_1, CIC_DLY3_0

	ssat	CIC_RESULT_1, #16, CIC_RESULT_1, ASR #1
	strh	CIC_RESULT_1, [CIC_OUTPUT], #2
	
	ldr	CIC_DATA, [CIC_INPUT], #4
	
	mov.w	CIC_LIT120_2, #120
	mla	CIC_ACC3_E, CIC_ACC0, CIC_LIT120_2, CIC_ACC3_O
	mov.w	CIC_LIT36_2, #36
	mla	CIC_ACC3_E, CIC_ACC1, CIC_LIT36_2, CIC_ACC3_E
	add	CIC_ACC3_E, CIC_ACC3_E, CIC_ACC2, LSL #3
	mla	CIC_ACC2, CIC_ACC0, CIC_LIT36_2, CIC_ACC2
	add	CIC_ACC2, CIC_ACC2, CIC_ACC1, LSL #3
	add	CIC_ACC1, CIC_ACC1, CIC_ACC0, LSL #3
	uxtb	CIC_INDEX_2, CIC_DATA
	ldr	CIC_COEFF_2, [CIC_LUT, CIC_INDEX_2, LSL #2]
        add	CIC_ACC3_E, CIC_ACC3_E, CIC_COEFF_2, ASR #21
	sxtab	CIC_ACC2, CIC_ACC2, CIC_COEFF_2, ROR #8
	sxtab	CIC_ACC1, CIC_ACC1, CIC_COEFF_2
	sbfx    CIC_COEFF_2, CIC_COEFF_2, #16, #5
	add.w	CIC_ACC0, CIC_ACC0, CIC_COEFF_2

	mov.w	CIC_LIT120_2, #120
	mla	CIC_ACC3_E, CIC_ACC0, CIC_LIT120_2, CIC_ACC3_E
	mov.w	CIC_LIT36_2, #36
	mla	CIC_ACC3_E, CIC_ACC1, CIC_LIT36_2, CIC_ACC3_E
	add	CIC_ACC3_E, CIC_ACC3_E, CIC_ACC2, LSL #3
	mla	CIC_ACC2, CIC_ACC0, CIC_LIT36_2, CIC_ACC2
	add	CIC_ACC2, CIC_ACC2, CIC_ACC1, LSL #3
	add	CIC_ACC1, CIC_ACC1, CIC_ACC0, LSL #3
	uxtb	CIC_INDEX_2, CIC_DATA, ROR #8
	ldr	CIC_COEFF_2, [CIC_LUT, CIC_INDEX_2, LSL #2]
        add	CIC_ACC3_E, CIC_ACC3_E, CIC_COEFF_2, ASR #21
	sxtab	CIC_ACC2, CIC_ACC2, CIC_COEFF_2, ROR #8
	sxtab	CIC_ACC1, CIC_ACC1, CIC_COEFF_2
	sbfx    CIC_COEFF_2, CIC_COEFF_2, #16, #5
	add.w	CIC_ACC0, CIC_ACC0, CIC_COEFF_2

	sub.w   CIC_DLY1_2, CIC_ACC3_E, CIC_ACC3_O
	sub.w	CIC_DLY2_2, CIC_DLY1_2, CIC_DLY1_1
	sub.w	CIC_DLY3_2, CIC_DLY2_2, CIC_DLY2_1
	sub.w	CIC_RESULT_2,  CIC_DLY3_2, CIC_DLY3_1

	ssat	CIC_RESULT_2, #16, CIC_RESULT_2, ASR #1
	strh	CIC_RESULT_2, [CIC_OUTPUT], #2

	mov.w	CIC_LIT120_3, #120
	mla	CIC_ACC3_O, CIC_ACC0, CIC_LIT120_3, CIC_ACC3_E
	mov.w	CIC_LIT36_3, #36
	mla	CIC_ACC3_O, CIC_ACC1, CIC_LIT36_3, CIC_ACC3_O
	add	CIC_ACC3_O, CIC_ACC3_O, CIC_ACC2, LSL #3
	mla	CIC_ACC2, CIC_ACC0, CIC_LIT36_3, CIC_ACC2
	add	CIC_ACC2, CIC_ACC2, CIC_ACC1, LSL #3
	add	CIC_ACC1, CIC_ACC1, CIC_ACC0, LSL #3
	uxtb	CIC_INDEX_3, CIC_DATA, ROR #16
	ldr	CIC_COEFF_3, [CIC_LUT, CIC_INDEX_3, LSL #2]
        add	CIC_ACC3_O, CIC_ACC3_O, CIC_COEFF_3, ASR #21
	sxtab	CIC_ACC2, CIC_ACC2, CIC_COEFF_3, ROR #8
	sxtab	CIC_ACC1, CIC_ACC1, CIC_COEFF_3
	sbfx    CIC_COEFF_3, CIC_COEFF_3, #16, #5
	add.w	CIC_ACC0, CIC_ACC0, CIC_COEFF_3

	mov.w	CIC_LIT120_3, #120
	mla	CIC_ACC3_O, CIC_ACC0, CIC_LIT120_3, CIC_ACC3_O
	mov.w	CIC_LIT36_3, #36
	mla	CIC_ACC3_O, CIC_ACC1, CIC_LIT36_3, CIC_ACC3_O
	add	CIC_ACC3_O, CIC_ACC3_O, CIC_ACC2, LSL #3
	mla	CIC_ACC2, CIC_ACC0, CIC_LIT36_3, CIC_ACC2
	add	CIC_ACC2, CIC_ACC2, CIC_ACC1, LSL #3
	add	CIC_ACC1, CIC_ACC1, CIC_ACC0, LSL #3
	uxtb	CIC_INDEX_3, CIC_DATA, ROR #24
	ldr	CIC_COEFF_3, [CIC_LUT, CIC_INDEX_3, LSL #2]
        add	CIC_ACC3_O, CIC_ACC3_O, CIC_COEFF_3, ASR #21
	sxtab	CIC_ACC2, CIC_ACC2, CIC_COEFF_3, ROR #8
	sxtab	CIC_ACC1, CIC_ACC1, CIC_COEFF_3
	sbfx    CIC_COEFF_3, CIC_COEFF_3, #16, #5
	add.w	CIC_ACC0, CIC_ACC0, CIC_COEFF_3

	sub.w   CIC_DLY1_3, CIC_ACC3_O, CIC_ACC3_E
	sub.w	CIC_DLY2_3, CIC_DLY1_3, CIC_DLY1_2
	sub.w	CIC_DLY3_3, CIC_DLY2_3, CIC_DLY2_2
	sub.w	CIC_RESULT_3,  CIC_DLY3_3, CIC_DLY3_2

	ssat	CIC_RESULT_3, #16, CIC_RESULT_3, ASR #1
	strh	CIC_RESULT_3, [CIC_OUTPUT], #2
	
	cmp.w	CIC_INPUT, CIC_INPUT_E
	bne.w	1b

	ldr	r12, [sp, #CIC_STACK_STATE]
	stm	r12, { CIC_ACC0, CIC_ACC1, CIC_ACC2, CIC_ACC3_E, CIC_ACC3_O, CIC_DLY1_3, CIC_DLY2_3, CIC_DLY3_3 }

	pop	{ r3, r4-r11, pc }
	

        .section .text.armv7m_pdm_cic4_x16_be_left, "ax"
	.thumb
	.thumb_func
	.type	armv7m_pdm_cic4_x16_be_left, %function
	.align	3
armv7m_pdm_cic4_x16_be_left:
	push	{ r3, r4-r11, lr }

	add     CIC_INPUT_E, r1, r2
	mov.w	r12, r3
	ldm	r12, { CIC_ACC0, CIC_ACC1, CIC_ACC2, CIC_ACC3_E, CIC_ACC3_O, CIC_DLY1_3, CIC_DLY2_3, CIC_DLY3_3 }

	movw	CIC_LUT, #:lower16:armv7m_pdm_cic4_lut
	movt	CIC_LUT, #:upper16:armv7m_pdm_cic4_lut
	
	.align	3
1:	ldr	CIC_DATA, [CIC_INPUT], #4

	mov.w	CIC_LIT120_0, #120
	mla	CIC_ACC3_E, CIC_ACC0, CIC_LIT120_0, CIC_ACC3_O
	mov.w	CIC_LIT36_0, #36
	mla	CIC_ACC3_E, CIC_ACC1, CIC_LIT36_0, CIC_ACC3_E
	add	CIC_ACC3_E, CIC_ACC3_E, CIC_ACC2, LSL #3
	mla	CIC_ACC2, CIC_ACC0, CIC_LIT36_0, CIC_ACC2
	add	CIC_ACC2, CIC_ACC2, CIC_ACC1, LSL #3
	add	CIC_ACC1, CIC_ACC1, CIC_ACC0, LSL #3
	uxtb	CIC_INDEX_0, CIC_DATA, ROR #8
	ldr	CIC_COEFF_0, [CIC_LUT, CIC_INDEX_0, LSL #2]
        add	CIC_ACC3_E, CIC_ACC3_E, CIC_COEFF_0, ASR #21
	sxtab	CIC_ACC2, CIC_ACC2, CIC_COEFF_0, ROR #8
	sxtab	CIC_ACC1, CIC_ACC1, CIC_COEFF_0
	sbfx    CIC_COEFF_0, CIC_COEFF_0, #16, #5
	add.w	CIC_ACC0, CIC_ACC0, CIC_COEFF_0

	mov.w	CIC_LIT120_0, #120
	mla	CIC_ACC3_E, CIC_ACC0, CIC_LIT120_0, CIC_ACC3_E
	mov.w	CIC_LIT36_0, #36
	mla	CIC_ACC3_E, CIC_ACC1, CIC_LIT36_0, CIC_ACC3_E
	add	CIC_ACC3_E, CIC_ACC3_E, CIC_ACC2, LSL #3
	mla	CIC_ACC2, CIC_ACC0, CIC_LIT36_0, CIC_ACC2
	add	CIC_ACC2, CIC_ACC2, CIC_ACC1, LSL #3
	add	CIC_ACC1, CIC_ACC1, CIC_ACC0, LSL #3
	uxtb	CIC_INDEX_0, CIC_DATA, ROR #24
	ldr	CIC_COEFF_0, [CIC_LUT, CIC_INDEX_0, LSL #2]
        add	CIC_ACC3_E, CIC_ACC3_E, CIC_COEFF_0, ASR #21
	sxtab	CIC_ACC2, CIC_ACC2, CIC_COEFF_0, ROR #8
	sxtab	CIC_ACC1, CIC_ACC1, CIC_COEFF_0
	sbfx    CIC_COEFF_0, CIC_COEFF_0, #16, #5
	add.w	CIC_ACC0, CIC_ACC0, CIC_COEFF_0

	sub.w   CIC_DLY1_0, CIC_ACC3_E, CIC_ACC3_O
	sub.w	CIC_DLY2_0, CIC_DLY1_0, CIC_DLY1_3
	sub.w	CIC_DLY3_0, CIC_DLY2_0, CIC_DLY2_3
	sub.w	CIC_RESULT_0,  CIC_DLY3_0, CIC_DLY3_3

	ssat	CIC_RESULT_0, #16, CIC_RESULT_0, ASR #1
	strh	CIC_RESULT_0, [CIC_OUTPUT], #2

	ldr	CIC_DATA, [CIC_INPUT], #4

	mov.w	CIC_LIT120_1, #120
	mla	CIC_ACC3_O, CIC_ACC0, CIC_LIT120_1, CIC_ACC3_E
	mov.w	CIC_LIT36_1, #36
	mla	CIC_ACC3_O, CIC_ACC1, CIC_LIT36_1, CIC_ACC3_O
	add	CIC_ACC3_O, CIC_ACC3_O, CIC_ACC2, LSL #3
	mla	CIC_ACC2, CIC_ACC0, CIC_LIT36_1, CIC_ACC2
	add	CIC_ACC2, CIC_ACC2, CIC_ACC1, LSL #3
	add	CIC_ACC1, CIC_ACC1, CIC_ACC0, LSL #3
	uxtb	CIC_INDEX_1, CIC_DATA, ROR #8
	ldr	CIC_COEFF_1, [CIC_LUT, CIC_INDEX_1, LSL #2]
        add	CIC_ACC3_O, CIC_ACC3_O, CIC_COEFF_1, ASR #21
	sxtab	CIC_ACC2, CIC_ACC2, CIC_COEFF_1, ROR #8
	sxtab	CIC_ACC1, CIC_ACC1, CIC_COEFF_1
	sbfx    CIC_COEFF_1, CIC_COEFF_1, #16, #5
	add.w	CIC_ACC0, CIC_ACC0, CIC_COEFF_1

	mov.w	CIC_LIT120_1, #120
	mla	CIC_ACC3_O, CIC_ACC0, CIC_LIT120_1, CIC_ACC3_O
	mov.w	CIC_LIT36_1, #36
	mla	CIC_ACC3_O, CIC_ACC1, CIC_LIT36_1, CIC_ACC3_O
	add	CIC_ACC3_O, CIC_ACC3_O, CIC_ACC2, LSL #3
	mla	CIC_ACC2, CIC_ACC0, CIC_LIT36_1, CIC_ACC2
	add	CIC_ACC2, CIC_ACC2, CIC_ACC1, LSL #3
	add	CIC_ACC1, CIC_ACC1, CIC_ACC0, LSL #3
	uxtb	CIC_INDEX_1, CIC_DATA, ROR #24
	ldr	CIC_COEFF_1, [CIC_LUT, CIC_INDEX_1, LSL #2]
        add	CIC_ACC3_O, CIC_ACC3_O, CIC_COEFF_1, ASR #21
	sxtab	CIC_ACC2, CIC_ACC2, CIC_COEFF_1, ROR #8
	sxtab	CIC_ACC1, CIC_ACC1, CIC_COEFF_1
	sbfx    CIC_COEFF_1, CIC_COEFF_1, #16, #5
	add.w	CIC_ACC0, CIC_ACC0, CIC_COEFF_1

	sub.w   CIC_DLY1_1, CIC_ACC3_O, CIC_ACC3_E
	sub.w	CIC_DLY2_1, CIC_DLY1_1, CIC_DLY1_0
	sub.w	CIC_DLY3_1, CIC_DLY2_1, CIC_DLY2_0
	sub.w	CIC_RESULT_1,  CIC_DLY3_1, CIC_DLY3_0

	ssat	CIC_RESULT_1, #16, CIC_RESULT_1, ASR #1
	strh	CIC_RESULT_1, [CIC_OUTPUT], #2
	
	ldr	CIC_DATA, [CIC_INPUT], #4
	
	mov.w	CIC_LIT120_2, #120
	mla	CIC_ACC3_E, CIC_ACC0, CIC_LIT120_2, CIC_ACC3_O
	mov.w	CIC_LIT36_2, #36
	mla	CIC_ACC3_E, CIC_ACC1, CIC_LIT36_2, CIC_ACC3_E
	add	CIC_ACC3_E, CIC_ACC3_E, CIC_ACC2, LSL #3
	mla	CIC_ACC2, CIC_ACC0, CIC_LIT36_2, CIC_ACC2
	add	CIC_ACC2, CIC_ACC2, CIC_ACC1, LSL #3
	add	CIC_ACC1, CIC_ACC1, CIC_ACC0, LSL #3
	uxtb	CIC_INDEX_2, CIC_DATA, ROR #8
	ldr	CIC_COEFF_2, [CIC_LUT, CIC_INDEX_2, LSL #2]
        add	CIC_ACC3_E, CIC_ACC3_E, CIC_COEFF_2, ASR #21
	sxtab	CIC_ACC2, CIC_ACC2, CIC_COEFF_2, ROR #8
	sxtab	CIC_ACC1, CIC_ACC1, CIC_COEFF_2
	sbfx    CIC_COEFF_2, CIC_COEFF_2, #16, #5
	add.w	CIC_ACC0, CIC_ACC0, CIC_COEFF_2

	mov.w	CIC_LIT120_2, #120
	mla	CIC_ACC3_E, CIC_ACC0, CIC_LIT120_2, CIC_ACC3_E
	mov.w	CIC_LIT36_2, #36
	mla	CIC_ACC3_E, CIC_ACC1, CIC_LIT36_2, CIC_ACC3_E
	add	CIC_ACC3_E, CIC_ACC3_E, CIC_ACC2, LSL #3
	mla	CIC_ACC2, CIC_ACC0, CIC_LIT36_2, CIC_ACC2
	add	CIC_ACC2, CIC_ACC2, CIC_ACC1, LSL #3
	add	CIC_ACC1, CIC_ACC1, CIC_ACC0, LSL #3
	uxtb	CIC_INDEX_2, CIC_DATA, ROR #24
	ldr	CIC_COEFF_2, [CIC_LUT, CIC_INDEX_2, LSL #2]
        add	CIC_ACC3_E, CIC_ACC3_E, CIC_COEFF_2, ASR #21
	sxtab	CIC_ACC2, CIC_ACC2, CIC_COEFF_2, ROR #8
	sxtab	CIC_ACC1, CIC_ACC1, CIC_COEFF_2
	sbfx    CIC_COEFF_2, CIC_COEFF_2, #16, #5
	add.w	CIC_ACC0, CIC_ACC0, CIC_COEFF_2

	sub.w   CIC_DLY1_2, CIC_ACC3_E, CIC_ACC3_O
	sub.w	CIC_DLY2_2, CIC_DLY1_2, CIC_DLY1_1
	sub.w	CIC_DLY3_2, CIC_DLY2_2, CIC_DLY2_1
	sub.w	CIC_RESULT_2,  CIC_DLY3_2, CIC_DLY3_1

	ssat	CIC_RESULT_2, #16, CIC_RESULT_2, ASR #1
	strh	CIC_RESULT_2, [CIC_OUTPUT], #2

	ldr	CIC_DATA, [CIC_INPUT], #4
	
	mov.w	CIC_LIT120_3, #120
	mla	CIC_ACC3_O, CIC_ACC0, CIC_LIT120_3, CIC_ACC3_E
	mov.w	CIC_LIT36_3, #36
	mla	CIC_ACC3_O, CIC_ACC1, CIC_LIT36_3, CIC_ACC3_O
	add	CIC_ACC3_O, CIC_ACC3_O, CIC_ACC2, LSL #3
	mla	CIC_ACC2, CIC_ACC0, CIC_LIT36_3, CIC_ACC2
	add	CIC_ACC2, CIC_ACC2, CIC_ACC1, LSL #3
	add	CIC_ACC1, CIC_ACC1, CIC_ACC0, LSL #3
	uxtb	CIC_INDEX_3, CIC_DATA, ROR #8
	ldr	CIC_COEFF_3, [CIC_LUT, CIC_INDEX_3, LSL #2]
        add	CIC_ACC3_O, CIC_ACC3_O, CIC_COEFF_3, ASR #21
	sxtab	CIC_ACC2, CIC_ACC2, CIC_COEFF_3, ROR #8
	sxtab	CIC_ACC1, CIC_ACC1, CIC_COEFF_3
	sbfx    CIC_COEFF_3, CIC_COEFF_3, #16, #5
	add.w	CIC_ACC0, CIC_ACC0, CIC_COEFF_3

	mov.w	CIC_LIT120_3, #120
	mla	CIC_ACC3_O, CIC_ACC0, CIC_LIT120_3, CIC_ACC3_O
	mov.w	CIC_LIT36_3, #36
	mla	CIC_ACC3_O, CIC_ACC1, CIC_LIT36_3, CIC_ACC3_O
	add	CIC_ACC3_O, CIC_ACC3_O, CIC_ACC2, LSL #3
	mla	CIC_ACC2, CIC_ACC0, CIC_LIT36_3, CIC_ACC2
	add	CIC_ACC2, CIC_ACC2, CIC_ACC1, LSL #3
	add	CIC_ACC1, CIC_ACC1, CIC_ACC0, LSL #3
	uxtb	CIC_INDEX_3, CIC_DATA, ROR #24
	ldr	CIC_COEFF_3, [CIC_LUT, CIC_INDEX_3, LSL #2]
        add	CIC_ACC3_O, CIC_ACC3_O, CIC_COEFF_3, ASR #21
	sxtab	CIC_ACC2, CIC_ACC2, CIC_COEFF_3, ROR #8
	sxtab	CIC_ACC1, CIC_ACC1, CIC_COEFF_3
	sbfx    CIC_COEFF_3, CIC_COEFF_3, #16, #5
	add.w	CIC_ACC0, CIC_ACC0, CIC_COEFF_3

	sub.w   CIC_DLY1_3, CIC_ACC3_O, CIC_ACC3_E
	sub.w	CIC_DLY2_3, CIC_DLY1_3, CIC_DLY1_2
	sub.w	CIC_DLY3_3, CIC_DLY2_3, CIC_DLY2_2
	sub.w	CIC_RESULT_3,  CIC_DLY3_3, CIC_DLY3_2

	ssat	CIC_RESULT_3, #16, CIC_RESULT_3, ASR #1
	strh	CIC_RESULT_3, [CIC_OUTPUT], #2
	
	cmp.w	CIC_INPUT, CIC_INPUT_E
	bne.w	1b

	ldr	r12, [sp, #CIC_STACK_STATE]
	stm	r12, { CIC_ACC0, CIC_ACC1, CIC_ACC2, CIC_ACC3_E, CIC_ACC3_O, CIC_DLY1_3, CIC_DLY2_3, CIC_DLY3_3 }

	pop	{ r3, r4-r11, pc }


        .section .text.armv7m_pdm_cic4_x16_be_right, "ax"
	.thumb
	.thumb_func
	.type	armv7m_pdm_cic4_x16_be_right, %function
	.align	3
armv7m_pdm_cic4_x16_be_right:
	push	{ r3, r4-r11, lr }

	add     CIC_INPUT_E, r1, r2
	mov.w	r12, r3
	ldm	r12, { CIC_ACC0, CIC_ACC1, CIC_ACC2, CIC_ACC3_E, CIC_ACC3_O, CIC_DLY1_3, CIC_DLY2_3, CIC_DLY3_3 }

	movw	CIC_LUT, #:lower16:armv7m_pdm_cic4_lut
	movt	CIC_LUT, #:upper16:armv7m_pdm_cic4_lut
	
	.align	3
1:	ldr	CIC_DATA, [CIC_INPUT], #4

	mov.w	CIC_LIT120_0, #120
	mla	CIC_ACC3_E, CIC_ACC0, CIC_LIT120_0, CIC_ACC3_O
	mov.w	CIC_LIT36_0, #36
	mla	CIC_ACC3_E, CIC_ACC1, CIC_LIT36_0, CIC_ACC3_E
	add	CIC_ACC3_E, CIC_ACC3_E, CIC_ACC2, LSL #3
	mla	CIC_ACC2, CIC_ACC0, CIC_LIT36_0, CIC_ACC2
	add	CIC_ACC2, CIC_ACC2, CIC_ACC1, LSL #3
	add	CIC_ACC1, CIC_ACC1, CIC_ACC0, LSL #3
	uxtb	CIC_INDEX_0, CIC_DATA
	ldr	CIC_COEFF_0, [CIC_LUT, CIC_INDEX_0, LSL #2]
        add	CIC_ACC3_E, CIC_ACC3_E, CIC_COEFF_0, ASR #21
	sxtab	CIC_ACC2, CIC_ACC2, CIC_COEFF_0, ROR #8
	sxtab	CIC_ACC1, CIC_ACC1, CIC_COEFF_0
	sbfx    CIC_COEFF_0, CIC_COEFF_0, #16, #5
	add.w	CIC_ACC0, CIC_ACC0, CIC_COEFF_0

	mov.w	CIC_LIT120_0, #120
	mla	CIC_ACC3_E, CIC_ACC0, CIC_LIT120_0, CIC_ACC3_E
	mov.w	CIC_LIT36_0, #36
	mla	CIC_ACC3_E, CIC_ACC1, CIC_LIT36_0, CIC_ACC3_E
	add	CIC_ACC3_E, CIC_ACC3_E, CIC_ACC2, LSL #3
	mla	CIC_ACC2, CIC_ACC0, CIC_LIT36_0, CIC_ACC2
	add	CIC_ACC2, CIC_ACC2, CIC_ACC1, LSL #3
	add	CIC_ACC1, CIC_ACC1, CIC_ACC0, LSL #3
	uxtb	CIC_INDEX_0, CIC_DATA, ROR #16
	ldr	CIC_COEFF_0, [CIC_LUT, CIC_INDEX_0, LSL #2]
        add	CIC_ACC3_E, CIC_ACC3_E, CIC_COEFF_0, ASR #21
	sxtab	CIC_ACC2, CIC_ACC2, CIC_COEFF_0, ROR #8
	sxtab	CIC_ACC1, CIC_ACC1, CIC_COEFF_0
	sbfx    CIC_COEFF_0, CIC_COEFF_0, #16, #5
	add.w	CIC_ACC0, CIC_ACC0, CIC_COEFF_0

	sub.w   CIC_DLY1_0, CIC_ACC3_E, CIC_ACC3_O
	sub.w	CIC_DLY2_0, CIC_DLY1_0, CIC_DLY1_3
	sub.w	CIC_DLY3_0, CIC_DLY2_0, CIC_DLY2_3
	sub.w	CIC_RESULT_0,  CIC_DLY3_0, CIC_DLY3_3

	ssat	CIC_RESULT_0, #16, CIC_RESULT_0, ASR #1
	strh	CIC_RESULT_0, [CIC_OUTPUT], #2

	ldr	CIC_DATA, [CIC_INPUT], #4

	mov.w	CIC_LIT120_1, #120
	mla	CIC_ACC3_O, CIC_ACC0, CIC_LIT120_1, CIC_ACC3_E
	mov.w	CIC_LIT36_1, #36
	mla	CIC_ACC3_O, CIC_ACC1, CIC_LIT36_1, CIC_ACC3_O
	add	CIC_ACC3_O, CIC_ACC3_O, CIC_ACC2, LSL #3
	mla	CIC_ACC2, CIC_ACC0, CIC_LIT36_1, CIC_ACC2
	add	CIC_ACC2, CIC_ACC2, CIC_ACC1, LSL #3
	add	CIC_ACC1, CIC_ACC1, CIC_ACC0, LSL #3
	uxtb	CIC_INDEX_1, CIC_DATA
	ldr	CIC_COEFF_1, [CIC_LUT, CIC_INDEX_1, LSL #2]
        add	CIC_ACC3_O, CIC_ACC3_O, CIC_COEFF_1, ASR #21
	sxtab	CIC_ACC2, CIC_ACC2, CIC_COEFF_1, ROR #8
	sxtab	CIC_ACC1, CIC_ACC1, CIC_COEFF_1
	sbfx    CIC_COEFF_1, CIC_COEFF_1, #16, #5
	add.w	CIC_ACC0, CIC_ACC0, CIC_COEFF_1

	mov.w	CIC_LIT120_1, #120
	mla	CIC_ACC3_O, CIC_ACC0, CIC_LIT120_1, CIC_ACC3_O
	mov.w	CIC_LIT36_1, #36
	mla	CIC_ACC3_O, CIC_ACC1, CIC_LIT36_1, CIC_ACC3_O
	add	CIC_ACC3_O, CIC_ACC3_O, CIC_ACC2, LSL #3
	mla	CIC_ACC2, CIC_ACC0, CIC_LIT36_1, CIC_ACC2
	add	CIC_ACC2, CIC_ACC2, CIC_ACC1, LSL #3
	add	CIC_ACC1, CIC_ACC1, CIC_ACC0, LSL #3
	uxtb	CIC_INDEX_1, CIC_DATA, ROR #16
	ldr	CIC_COEFF_1, [CIC_LUT, CIC_INDEX_1, LSL #2]
        add	CIC_ACC3_O, CIC_ACC3_O, CIC_COEFF_1, ASR #21
	sxtab	CIC_ACC2, CIC_ACC2, CIC_COEFF_1, ROR #8
	sxtab	CIC_ACC1, CIC_ACC1, CIC_COEFF_1
	sbfx    CIC_COEFF_1, CIC_COEFF_1, #16, #5
	add.w	CIC_ACC0, CIC_ACC0, CIC_COEFF_1

	sub.w   CIC_DLY1_1, CIC_ACC3_O, CIC_ACC3_E
	sub.w	CIC_DLY2_1, CIC_DLY1_1, CIC_DLY1_0
	sub.w	CIC_DLY3_1, CIC_DLY2_1, CIC_DLY2_0
	sub.w	CIC_RESULT_1,  CIC_DLY3_1, CIC_DLY3_0

	ssat	CIC_RESULT_1, #16, CIC_RESULT_1, ASR #1
	strh	CIC_RESULT_1, [CIC_OUTPUT], #2
	
	ldr	CIC_DATA, [CIC_INPUT], #4
	
	mov.w	CIC_LIT120_2, #120
	mla	CIC_ACC3_E, CIC_ACC0, CIC_LIT120_2, CIC_ACC3_O
	mov.w	CIC_LIT36_2, #36
	mla	CIC_ACC3_E, CIC_ACC1, CIC_LIT36_2, CIC_ACC3_E
	add	CIC_ACC3_E, CIC_ACC3_E, CIC_ACC2, LSL #3
	mla	CIC_ACC2, CIC_ACC0, CIC_LIT36_2, CIC_ACC2
	add	CIC_ACC2, CIC_ACC2, CIC_ACC1, LSL #3
	add	CIC_ACC1, CIC_ACC1, CIC_ACC0, LSL #3
	uxtb	CIC_INDEX_2, CIC_DATA
	ldr	CIC_COEFF_2, [CIC_LUT, CIC_INDEX_2, LSL #2]
        add	CIC_ACC3_E, CIC_ACC3_E, CIC_COEFF_2, ASR #21
	sxtab	CIC_ACC2, CIC_ACC2, CIC_COEFF_2, ROR #8
	sxtab	CIC_ACC1, CIC_ACC1, CIC_COEFF_2
	sbfx    CIC_COEFF_2, CIC_COEFF_2, #16, #5
	add.w	CIC_ACC0, CIC_ACC0, CIC_COEFF_2

	mov.w	CIC_LIT120_2, #120
	mla	CIC_ACC3_E, CIC_ACC0, CIC_LIT120_2, CIC_ACC3_E
	mov.w	CIC_LIT36_2, #36
	mla	CIC_ACC3_E, CIC_ACC1, CIC_LIT36_2, CIC_ACC3_E
	add	CIC_ACC3_E, CIC_ACC3_E, CIC_ACC2, LSL #3
	mla	CIC_ACC2, CIC_ACC0, CIC_LIT36_2, CIC_ACC2
	add	CIC_ACC2, CIC_ACC2, CIC_ACC1, LSL #3
	add	CIC_ACC1, CIC_ACC1, CIC_ACC0, LSL #3
	uxtb	CIC_INDEX_2, CIC_DATA, ROR #16
	ldr	CIC_COEFF_2, [CIC_LUT, CIC_INDEX_2, LSL #2]
        add	CIC_ACC3_E, CIC_ACC3_E, CIC_COEFF_2, ASR #21
	sxtab	CIC_ACC2, CIC_ACC2, CIC_COEFF_2, ROR #8
	sxtab	CIC_ACC1, CIC_ACC1, CIC_COEFF_2
	sbfx    CIC_COEFF_2, CIC_COEFF_2, #16, #5
	add.w	CIC_ACC0, CIC_ACC0, CIC_COEFF_2

	sub.w   CIC_DLY1_2, CIC_ACC3_E, CIC_ACC3_O
	sub.w	CIC_DLY2_2, CIC_DLY1_2, CIC_DLY1_1
	sub.w	CIC_DLY3_2, CIC_DLY2_2, CIC_DLY2_1
	sub.w	CIC_RESULT_2,  CIC_DLY3_2, CIC_DLY3_1

	ssat	CIC_RESULT_2, #16, CIC_RESULT_2, ASR #1
	strh	CIC_RESULT_2, [CIC_OUTPUT], #2

	ldr	CIC_DATA, [CIC_INPUT], #4
	
	mov.w	CIC_LIT120_3, #120
	mla	CIC_ACC3_O, CIC_ACC0, CIC_LIT120_3, CIC_ACC3_E
	mov.w	CIC_LIT36_3, #36
	mla	CIC_ACC3_O, CIC_ACC1, CIC_LIT36_3, CIC_ACC3_O
	add	CIC_ACC3_O, CIC_ACC3_O, CIC_ACC2, LSL #3
	mla	CIC_ACC2, CIC_ACC0, CIC_LIT36_3, CIC_ACC2
	add	CIC_ACC2, CIC_ACC2, CIC_ACC1, LSL #3
	add	CIC_ACC1, CIC_ACC1, CIC_ACC0, LSL #3
	uxtb	CIC_INDEX_3, CIC_DATA
	ldr	CIC_COEFF_3, [CIC_LUT, CIC_INDEX_3, LSL #2]
        add	CIC_ACC3_O, CIC_ACC3_O, CIC_COEFF_3, ASR #21
	sxtab	CIC_ACC2, CIC_ACC2, CIC_COEFF_3, ROR #8
	sxtab	CIC_ACC1, CIC_ACC1, CIC_COEFF_3
	sbfx    CIC_COEFF_3, CIC_COEFF_3, #16, #5
	add.w	CIC_ACC0, CIC_ACC0, CIC_COEFF_3

	mov.w	CIC_LIT120_3, #120
	mla	CIC_ACC3_O, CIC_ACC0, CIC_LIT120_3, CIC_ACC3_O
	mov.w	CIC_LIT36_3, #36
	mla	CIC_ACC3_O, CIC_ACC1, CIC_LIT36_3, CIC_ACC3_O
	add	CIC_ACC3_O, CIC_ACC3_O, CIC_ACC2, LSL #3
	mla	CIC_ACC2, CIC_ACC0, CIC_LIT36_3, CIC_ACC2
	add	CIC_ACC2, CIC_ACC2, CIC_ACC1, LSL #3
	add	CIC_ACC1, CIC_ACC1, CIC_ACC0, LSL #3
	uxtb	CIC_INDEX_3, CIC_DATA, ROR #16
	ldr	CIC_COEFF_3, [CIC_LUT, CIC_INDEX_3, LSL #2]
        add	CIC_ACC3_O, CIC_ACC3_O, CIC_COEFF_3, ASR #21
	sxtab	CIC_ACC2, CIC_ACC2, CIC_COEFF_3, ROR #8
	sxtab	CIC_ACC1, CIC_ACC1, CIC_COEFF_3
	sbfx    CIC_COEFF_3, CIC_COEFF_3, #16, #5
	add.w	CIC_ACC0, CIC_ACC0, CIC_COEFF_3

	sub.w   CIC_DLY1_3, CIC_ACC3_O, CIC_ACC3_E
	sub.w	CIC_DLY2_3, CIC_DLY1_3, CIC_DLY1_2
	sub.w	CIC_DLY3_3, CIC_DLY2_3, CIC_DLY2_2
	sub.w	CIC_RESULT_3,  CIC_DLY3_3, CIC_DLY3_2

	ssat	CIC_RESULT_3, #16, CIC_RESULT_3, ASR #1
	strh	CIC_RESULT_3, [CIC_OUTPUT], #2
	
	cmp.w	CIC_INPUT, CIC_INPUT_E
	bne.w	1b

	ldr	r12, [sp, #CIC_STACK_STATE]
	stm	r12, { CIC_ACC0, CIC_ACC1, CIC_ACC2, CIC_ACC3_E, CIC_ACC3_O, CIC_DLY1_3, CIC_DLY2_3, CIC_DLY3_3 }

	pop	{ r3, r4-r11, pc }


        .section .text.armv7m_pdm_cic4_x16_le, "ax"
	.thumb
	.thumb_func
	.type	armv7m_pdm_cic4_x16_le, %function
	.align	3
armv7m_pdm_cic4_x16_le:
	push	{ r3, r4-r11, lr }

	add     CIC_INPUT_E, r1, r2
	mov.w	r12, r3
	ldm	r12, { CIC_ACC0, CIC_ACC1, CIC_ACC2, CIC_ACC3_E, CIC_ACC3_O, CIC_DLY1_3, CIC_DLY2_3, CIC_DLY3_3 }

	movw	CIC_LUT, #:lower16:armv7m_pdm_cic4_lut
	movt	CIC_LUT, #:upper16:armv7m_pdm_cic4_lut
	
	.align	3
1:	ldr	CIC_DATA, [CIC_INPUT], #4

	mov.w	CIC_LIT120_0, #120
	mla	CIC_ACC3_E, CIC_ACC0, CIC_LIT120_0, CIC_ACC3_O
	mov.w	CIC_LIT36_0, #36
	mla	CIC_ACC3_E, CIC_ACC1, CIC_LIT36_0, CIC_ACC3_E
	add	CIC_ACC3_E, CIC_ACC3_E, CIC_ACC2, LSL #3
	mla	CIC_ACC2, CIC_ACC0, CIC_LIT36_0, CIC_ACC2
	add	CIC_ACC2, CIC_ACC2, CIC_ACC1, LSL #3
	add	CIC_ACC1, CIC_ACC1, CIC_ACC0, LSL #3
	uxtb	CIC_INDEX_0, CIC_DATA, ROR #24
	ldr	CIC_COEFF_0, [CIC_LUT, CIC_INDEX_0, LSL #2]
        add	CIC_ACC3_E, CIC_ACC3_E, CIC_COEFF_0, ASR #21
	sxtab	CIC_ACC2, CIC_ACC2, CIC_COEFF_0, ROR #8
	sxtab	CIC_ACC1, CIC_ACC1, CIC_COEFF_0
	sbfx    CIC_COEFF_0, CIC_COEFF_0, #16, #5
	add.w	CIC_ACC0, CIC_ACC0, CIC_COEFF_0

	mov.w	CIC_LIT120_0, #120
	mla	CIC_ACC3_E, CIC_ACC0, CIC_LIT120_0, CIC_ACC3_E
	mov.w	CIC_LIT36_0, #36
	mla	CIC_ACC3_E, CIC_ACC1, CIC_LIT36_0, CIC_ACC3_E
	add	CIC_ACC3_E, CIC_ACC3_E, CIC_ACC2, LSL #3
	mla	CIC_ACC2, CIC_ACC0, CIC_LIT36_0, CIC_ACC2
	add	CIC_ACC2, CIC_ACC2, CIC_ACC1, LSL #3
	add	CIC_ACC1, CIC_ACC1, CIC_ACC0, LSL #3
	uxtb	CIC_INDEX_0, CIC_DATA, ROR #16
	ldr	CIC_COEFF_0, [CIC_LUT, CIC_INDEX_0, LSL #2]
        add	CIC_ACC3_E, CIC_ACC3_E, CIC_COEFF_0, ASR #21
	sxtab	CIC_ACC2, CIC_ACC2, CIC_COEFF_0, ROR #8
	sxtab	CIC_ACC1, CIC_ACC1, CIC_COEFF_0
	sbfx    CIC_COEFF_0, CIC_COEFF_0, #16, #5
	add.w	CIC_ACC0, CIC_ACC0, CIC_COEFF_0

	sub.w   CIC_DLY1_0, CIC_ACC3_E, CIC_ACC3_O
	sub.w	CIC_DLY2_0, CIC_DLY1_0, CIC_DLY1_3
	sub.w	CIC_DLY3_0, CIC_DLY2_0, CIC_DLY2_3
	sub.w	CIC_RESULT_0,  CIC_DLY3_0, CIC_DLY3_3

	ssat	CIC_RESULT_0, #16, CIC_RESULT_0, ASR #1
	strh	CIC_RESULT_0, [CIC_OUTPUT], #2

	mov.w	CIC_LIT120_1, #120
	mla	CIC_ACC3_O, CIC_ACC0, CIC_LIT120_1, CIC_ACC3_E
	mov.w	CIC_LIT36_1, #36
	mla	CIC_ACC3_O, CIC_ACC1, CIC_LIT36_1, CIC_ACC3_O
	add	CIC_ACC3_O, CIC_ACC3_O, CIC_ACC2, LSL #3
	mla	CIC_ACC2, CIC_ACC0, CIC_LIT36_1, CIC_ACC2
	add	CIC_ACC2, CIC_ACC2, CIC_ACC1, LSL #3
	add	CIC_ACC1, CIC_ACC1, CIC_ACC0, LSL #3
	uxtb	CIC_INDEX_1, CIC_DATA, ROR #8
	ldr	CIC_COEFF_1, [CIC_LUT, CIC_INDEX_1, LSL #2]
        add	CIC_ACC3_O, CIC_ACC3_O, CIC_COEFF_1, ASR #21
	sxtab	CIC_ACC2, CIC_ACC2, CIC_COEFF_1, ROR #8
	sxtab	CIC_ACC1, CIC_ACC1, CIC_COEFF_1
	sbfx    CIC_COEFF_1, CIC_COEFF_1, #16, #5
	add.w	CIC_ACC0, CIC_ACC0, CIC_COEFF_1

	mov.w	CIC_LIT120_1, #120
	mla	CIC_ACC3_O, CIC_ACC0, CIC_LIT120_1, CIC_ACC3_O
	mov.w	CIC_LIT36_1, #36
	mla	CIC_ACC3_O, CIC_ACC1, CIC_LIT36_1, CIC_ACC3_O
	add	CIC_ACC3_O, CIC_ACC3_O, CIC_ACC2, LSL #3
	mla	CIC_ACC2, CIC_ACC0, CIC_LIT36_1, CIC_ACC2
	add	CIC_ACC2, CIC_ACC2, CIC_ACC1, LSL #3
	add	CIC_ACC1, CIC_ACC1, CIC_ACC0, LSL #3
	uxtb	CIC_INDEX_1, CIC_DATA
	ldr	CIC_COEFF_1, [CIC_LUT, CIC_INDEX_1, LSL #2]
        add	CIC_ACC3_O, CIC_ACC3_O, CIC_COEFF_1, ASR #21
	sxtab	CIC_ACC2, CIC_ACC2, CIC_COEFF_1, ROR #8
	sxtab	CIC_ACC1, CIC_ACC1, CIC_COEFF_1
	sbfx    CIC_COEFF_1, CIC_COEFF_1, #16, #5
	add.w	CIC_ACC0, CIC_ACC0, CIC_COEFF_1

	sub.w   CIC_DLY1_1, CIC_ACC3_O, CIC_ACC3_E
	sub.w	CIC_DLY2_1, CIC_DLY1_1, CIC_DLY1_0
	sub.w	CIC_DLY3_1, CIC_DLY2_1, CIC_DLY2_0
	sub.w	CIC_RESULT_1,  CIC_DLY3_1, CIC_DLY3_0

	ssat	CIC_RESULT_1, #16, CIC_RESULT_1, ASR #1
	strh	CIC_RESULT_1, [CIC_OUTPUT], #2
	
	ldr	CIC_DATA, [CIC_INPUT], #4
	
	mov.w	CIC_LIT120_2, #120
	mla	CIC_ACC3_E, CIC_ACC0, CIC_LIT120_2, CIC_ACC3_O
	mov.w	CIC_LIT36_2, #36
	mla	CIC_ACC3_E, CIC_ACC1, CIC_LIT36_2, CIC_ACC3_E
	add	CIC_ACC3_E, CIC_ACC3_E, CIC_ACC2, LSL #3
	mla	CIC_ACC2, CIC_ACC0, CIC_LIT36_2, CIC_ACC2
	add	CIC_ACC2, CIC_ACC2, CIC_ACC1, LSL #3
	add	CIC_ACC1, CIC_ACC1, CIC_ACC0, LSL #3
	uxtb	CIC_INDEX_2, CIC_DATA, ROR #24
	ldr	CIC_COEFF_2, [CIC_LUT, CIC_INDEX_2, LSL #2]
        add	CIC_ACC3_E, CIC_ACC3_E, CIC_COEFF_2, ASR #21
	sxtab	CIC_ACC2, CIC_ACC2, CIC_COEFF_2, ROR #8
	sxtab	CIC_ACC1, CIC_ACC1, CIC_COEFF_2
	sbfx    CIC_COEFF_2, CIC_COEFF_2, #16, #5
	add.w	CIC_ACC0, CIC_ACC0, CIC_COEFF_2

	mov.w	CIC_LIT120_2, #120
	mla	CIC_ACC3_E, CIC_ACC0, CIC_LIT120_2, CIC_ACC3_E
	mov.w	CIC_LIT36_2, #36
	mla	CIC_ACC3_E, CIC_ACC1, CIC_LIT36_2, CIC_ACC3_E
	add	CIC_ACC3_E, CIC_ACC3_E, CIC_ACC2, LSL #3
	mla	CIC_ACC2, CIC_ACC0, CIC_LIT36_2, CIC_ACC2
	add	CIC_ACC2, CIC_ACC2, CIC_ACC1, LSL #3
	add	CIC_ACC1, CIC_ACC1, CIC_ACC0, LSL #3
	uxtb	CIC_INDEX_2, CIC_DATA, ROR #16
	ldr	CIC_COEFF_2, [CIC_LUT, CIC_INDEX_2, LSL #2]
        add	CIC_ACC3_E, CIC_ACC3_E, CIC_COEFF_2, ASR #21
	sxtab	CIC_ACC2, CIC_ACC2, CIC_COEFF_2, ROR #8
	sxtab	CIC_ACC1, CIC_ACC1, CIC_COEFF_2
	sbfx    CIC_COEFF_2, CIC_COEFF_2, #16, #5
	add.w	CIC_ACC0, CIC_ACC0, CIC_COEFF_2

	sub.w   CIC_DLY1_2, CIC_ACC3_E, CIC_ACC3_O
	sub.w	CIC_DLY2_2, CIC_DLY1_2, CIC_DLY1_1
	sub.w	CIC_DLY3_2, CIC_DLY2_2, CIC_DLY2_1
	sub.w	CIC_RESULT_2,  CIC_DLY3_2, CIC_DLY3_1

	ssat	CIC_RESULT_2, #16, CIC_RESULT_2, ASR #1
	strh	CIC_RESULT_2, [CIC_OUTPUT], #2

	mov.w	CIC_LIT120_3, #120
	mla	CIC_ACC3_O, CIC_ACC0, CIC_LIT120_3, CIC_ACC3_E
	mov.w	CIC_LIT36_3, #36
	mla	CIC_ACC3_O, CIC_ACC1, CIC_LIT36_3, CIC_ACC3_O
	add	CIC_ACC3_O, CIC_ACC3_O, CIC_ACC2, LSL #3
	mla	CIC_ACC2, CIC_ACC0, CIC_LIT36_3, CIC_ACC2
	add	CIC_ACC2, CIC_ACC2, CIC_ACC1, LSL #3
	add	CIC_ACC1, CIC_ACC1, CIC_ACC0, LSL #3
	uxtb	CIC_INDEX_3, CIC_DATA, ROR #8
	ldr	CIC_COEFF_3, [CIC_LUT, CIC_INDEX_3, LSL #2]
        add	CIC_ACC3_O, CIC_ACC3_O, CIC_COEFF_3, ASR #21
	sxtab	CIC_ACC2, CIC_ACC2, CIC_COEFF_3, ROR #8
	sxtab	CIC_ACC1, CIC_ACC1, CIC_COEFF_3
	sbfx    CIC_COEFF_3, CIC_COEFF_3, #16, #5
	add.w	CIC_ACC0, CIC_ACC0, CIC_COEFF_3

	mov.w	CIC_LIT120_3, #120
	mla	CIC_ACC3_O, CIC_ACC0, CIC_LIT120_3, CIC_ACC3_O
	mov.w	CIC_LIT36_3, #36
	mla	CIC_ACC3_O, CIC_ACC1, CIC_LIT36_3, CIC_ACC3_O
	add	CIC_ACC3_O, CIC_ACC3_O, CIC_ACC2, LSL #3
	mla	CIC_ACC2, CIC_ACC0, CIC_LIT36_3, CIC_ACC2
	add	CIC_ACC2, CIC_ACC2, CIC_ACC1, LSL #3
	add	CIC_ACC1, CIC_ACC1, CIC_ACC0, LSL #3
	uxtb	CIC_INDEX_3, CIC_DATA
	ldr	CIC_COEFF_3, [CIC_LUT, CIC_INDEX_3, LSL #2]
        add	CIC_ACC3_O, CIC_ACC3_O, CIC_COEFF_3, ASR #21
	sxtab	CIC_ACC2, CIC_ACC2, CIC_COEFF_3, ROR #8
	sxtab	CIC_ACC1, CIC_ACC1, CIC_COEFF_3
	sbfx    CIC_COEFF_3, CIC_COEFF_3, #16, #5
	add.w	CIC_ACC0, CIC_ACC0, CIC_COEFF_3

	sub.w   CIC_DLY1_3, CIC_ACC3_O, CIC_ACC3_E
	sub.w	CIC_DLY2_3, CIC_DLY1_3, CIC_DLY1_2
	sub.w	CIC_DLY3_3, CIC_DLY2_3, CIC_DLY2_2
	sub.w	CIC_RESULT_3,  CIC_DLY3_3, CIC_DLY3_2

	ssat	CIC_RESULT_3, #16, CIC_RESULT_3, ASR #1
	strh	CIC_RESULT_3, [CIC_OUTPUT], #2
	
	cmp.w	CIC_INPUT, CIC_INPUT_E
	bne.w	1b

	ldr	r12, [sp, #CIC_STACK_STATE]
	stm	r12, { CIC_ACC0, CIC_ACC1, CIC_ACC2, CIC_ACC3_E, CIC_ACC3_O, CIC_DLY1_3, CIC_DLY2_3, CIC_DLY3_3 }

	pop	{ r3, r4-r11, pc }
	

	// armv7m_pdm_hbf15_x2(int16_t *output, const int16_t *input, uint32_t count, armv7m_pdm_hbf_state_t *state)
	//
	// R0 is OUTPUT
	// R1 is INPUT
	// R2 is COUNT
	// R3 is STATE

#define HBF_STACK_INPUT 0
#define HBF_STACK_COUNT 4
#define HBF_STACK_STATE 8
	
#define HBF_OUTPUT    r0 
#define HBF_DELAY     r1
#define HBF_INPUT     r1
#define HBF_DATA      r2
#define HBF_ACC0      r3
#define HBF_ACC1      r4
#define HBF_ACC2      r5
#define HBF_ACC3      r6
#define HBF_ACC4      r7
#define HBF_ACC5      r8
#define HBF_ACC6      r9
#define HBF_RESULT    r9
#define HBF_COEFF_0_2 r10
#define HBF_COEFF_4_6 r11
#define HBF_COEFF_7_6 r12
#define HBF_INPUT_E   lr

        .section .text.armv7m_pdm_hbf15_x2, "ax"
	.thumb
	.thumb_func
	.type	armv7m_pdm_hbf15_x2, %function
	.align	3
armv7m_pdm_hbf15_x2:
	push	{ r1, r2, r3, r4-r11, lr }

	// HBF_OUTPUT is already set
	mov.w   HBF_DELAY, r3
	movw	r12, #:lower16:armv7m_pdm_hbf15_coeff
	movt	r12, #:upper16:armv7m_pdm_hbf15_coeff
	ldm	r12, { HBF_COEFF_0_2, HBF_COEFF_4_6, HBF_COEFF_7_6 }

	ldr	HBF_DATA, [HBF_DELAY], #4
	smulbb	HBF_ACC0, HBF_DATA, HBF_COEFF_0_2

	ldr	HBF_DATA, [HBF_DELAY], #4
	smlabt	HBF_ACC1, HBF_DATA, HBF_COEFF_0_2, HBF_ACC0
	smulbb	HBF_ACC0, HBF_DATA, HBF_COEFF_0_2

	ldr	HBF_DATA, [HBF_DELAY], #4
	smlabb	HBF_ACC2, HBF_DATA, HBF_COEFF_4_6, HBF_ACC1
	smlabt	HBF_ACC1, HBF_DATA, HBF_COEFF_0_2, HBF_ACC0
	smulbb	HBF_ACC0, HBF_DATA, HBF_COEFF_0_2

	ldr	HBF_DATA, [HBF_DELAY], #4
	smladx	HBF_ACC3, HBF_DATA, HBF_COEFF_7_6, HBF_ACC2
	smlabb	HBF_ACC2, HBF_DATA, HBF_COEFF_4_6, HBF_ACC1
	smlabt	HBF_ACC1, HBF_DATA, HBF_COEFF_0_2, HBF_ACC0
	smulbb	HBF_ACC0, HBF_DATA, HBF_COEFF_0_2

	ldr	HBF_DATA, [HBF_DELAY], #4
	smlabt	HBF_ACC4, HBF_DATA, HBF_COEFF_4_6, HBF_ACC3
	smladx	HBF_ACC3, HBF_DATA, HBF_COEFF_7_6, HBF_ACC2
	smlabb	HBF_ACC2, HBF_DATA, HBF_COEFF_4_6, HBF_ACC1
	smlabt	HBF_ACC1, HBF_DATA, HBF_COEFF_0_2, HBF_ACC0
	smulbb	HBF_ACC0, HBF_DATA, HBF_COEFF_0_2

	ldr	HBF_DATA, [HBF_DELAY], #4
	smlabb	HBF_ACC5, HBF_DATA, HBF_COEFF_4_6, HBF_ACC4
	smlabt	HBF_ACC4, HBF_DATA, HBF_COEFF_4_6, HBF_ACC3
	smladx	HBF_ACC3, HBF_DATA, HBF_COEFF_7_6, HBF_ACC2
	smlabb	HBF_ACC2, HBF_DATA, HBF_COEFF_4_6, HBF_ACC1
	smlabt	HBF_ACC1, HBF_DATA, HBF_COEFF_0_2, HBF_ACC0
	smulbb	HBF_ACC0, HBF_DATA, HBF_COEFF_0_2

	ldr	HBF_DATA, [HBF_DELAY], #4
	smlabt	HBF_ACC6, HBF_DATA, HBF_COEFF_0_2, HBF_ACC5
	smlabb	HBF_ACC5, HBF_DATA, HBF_COEFF_4_6, HBF_ACC4
	smlabt	HBF_ACC4, HBF_DATA, HBF_COEFF_4_6, HBF_ACC3
	smladx	HBF_ACC3, HBF_DATA, HBF_COEFF_7_6, HBF_ACC2
	smlabb	HBF_ACC2, HBF_DATA, HBF_COEFF_4_6, HBF_ACC1
	smlabt	HBF_ACC1, HBF_DATA, HBF_COEFF_0_2, HBF_ACC0
	smulbb	HBF_ACC0, HBF_DATA, HBF_COEFF_0_2

	ldr.w	HBF_INPUT, [sp, #HBF_STACK_INPUT]
	ldr.w	HBF_INPUT_E, [sp, #HBF_STACK_COUNT]
	add	HBF_INPUT_E, HBF_INPUT, HBF_INPUT_E, LSL #1
	sub.w	HBF_INPUT_E, #32
	
	.align	3
1:	ldr	HBF_DATA, [HBF_INPUT], #4
	smlabb	HBF_RESULT, HBF_DATA, HBF_COEFF_0_2, HBF_ACC6
	ssat	HBF_RESULT, #16, HBF_RESULT, ASR #15
	strh	HBF_RESULT, [HBF_OUTPUT], #2
	smlabt	HBF_ACC6, HBF_DATA, HBF_COEFF_0_2, HBF_ACC5
	smlabb	HBF_ACC5, HBF_DATA, HBF_COEFF_4_6, HBF_ACC4
	smlabt	HBF_ACC4, HBF_DATA, HBF_COEFF_4_6, HBF_ACC3
	smladx	HBF_ACC3, HBF_DATA, HBF_COEFF_7_6, HBF_ACC2
	smlabb	HBF_ACC2, HBF_DATA, HBF_COEFF_4_6, HBF_ACC1
	smlabt	HBF_ACC1, HBF_DATA, HBF_COEFF_0_2, HBF_ACC0
	smulbb	HBF_ACC0, HBF_DATA, HBF_COEFF_0_2

	ldr	HBF_DATA, [HBF_INPUT], #4
	smlabb	HBF_RESULT, HBF_DATA, HBF_COEFF_0_2, HBF_ACC6
	ssat	HBF_RESULT, #16, HBF_RESULT, ASR #15
	strh	HBF_RESULT, [HBF_OUTPUT], #2
	smlabt	HBF_ACC6, HBF_DATA, HBF_COEFF_0_2, HBF_ACC5
	smlabb	HBF_ACC5, HBF_DATA, HBF_COEFF_4_6, HBF_ACC4
	smlabt	HBF_ACC4, HBF_DATA, HBF_COEFF_4_6, HBF_ACC3
	smladx	HBF_ACC3, HBF_DATA, HBF_COEFF_7_6, HBF_ACC2
	smlabb	HBF_ACC2, HBF_DATA, HBF_COEFF_4_6, HBF_ACC1
	smlabt	HBF_ACC1, HBF_DATA, HBF_COEFF_0_2, HBF_ACC0
	smulbb	HBF_ACC0, HBF_DATA, HBF_COEFF_0_2

	ldr	HBF_DATA, [HBF_INPUT], #4
	smlabb	HBF_RESULT, HBF_DATA, HBF_COEFF_0_2, HBF_ACC6
	ssat	HBF_RESULT, #16, HBF_RESULT, ASR #15
	strh	HBF_RESULT, [HBF_OUTPUT], #2
	smlabt	HBF_ACC6, HBF_DATA, HBF_COEFF_0_2, HBF_ACC5
	smlabb	HBF_ACC5, HBF_DATA, HBF_COEFF_4_6, HBF_ACC4
	smlabt	HBF_ACC4, HBF_DATA, HBF_COEFF_4_6, HBF_ACC3
	smladx	HBF_ACC3, HBF_DATA, HBF_COEFF_7_6, HBF_ACC2
	smlabb	HBF_ACC2, HBF_DATA, HBF_COEFF_4_6, HBF_ACC1
	smlabt	HBF_ACC1, HBF_DATA, HBF_COEFF_0_2, HBF_ACC0
	smulbb	HBF_ACC0, HBF_DATA, HBF_COEFF_0_2

	ldr	HBF_DATA, [HBF_INPUT], #4
	smlabb	HBF_RESULT, HBF_DATA, HBF_COEFF_0_2, HBF_ACC6
	ssat	HBF_RESULT, #16, HBF_RESULT, ASR #15
	strh	HBF_RESULT, [HBF_OUTPUT], #2
	smlabt	HBF_ACC6, HBF_DATA, HBF_COEFF_0_2, HBF_ACC5
	smlabb	HBF_ACC5, HBF_DATA, HBF_COEFF_4_6, HBF_ACC4
	smlabt	HBF_ACC4, HBF_DATA, HBF_COEFF_4_6, HBF_ACC3
	smladx	HBF_ACC3, HBF_DATA, HBF_COEFF_7_6, HBF_ACC2
	smlabb	HBF_ACC2, HBF_DATA, HBF_COEFF_4_6, HBF_ACC1
	smlabt	HBF_ACC1, HBF_DATA, HBF_COEFF_0_2, HBF_ACC0
	smulbb	HBF_ACC0, HBF_DATA, HBF_COEFF_0_2

	ldr	HBF_DATA, [HBF_INPUT], #4
	smlabb	HBF_RESULT, HBF_DATA, HBF_COEFF_0_2, HBF_ACC6
	ssat	HBF_RESULT, #16, HBF_RESULT, ASR #15
	strh	HBF_RESULT, [HBF_OUTPUT], #2
	smlabt	HBF_ACC6, HBF_DATA, HBF_COEFF_0_2, HBF_ACC5
	smlabb	HBF_ACC5, HBF_DATA, HBF_COEFF_4_6, HBF_ACC4
	smlabt	HBF_ACC4, HBF_DATA, HBF_COEFF_4_6, HBF_ACC3
	smladx	HBF_ACC3, HBF_DATA, HBF_COEFF_7_6, HBF_ACC2
	smlabb	HBF_ACC2, HBF_DATA, HBF_COEFF_4_6, HBF_ACC1
	smlabt	HBF_ACC1, HBF_DATA, HBF_COEFF_0_2, HBF_ACC0
	smulbb	HBF_ACC0, HBF_DATA, HBF_COEFF_0_2

	ldr	HBF_DATA, [HBF_INPUT], #4
	smlabb	HBF_RESULT, HBF_DATA, HBF_COEFF_0_2, HBF_ACC6
	ssat	HBF_RESULT, #16, HBF_RESULT, ASR #15
	strh	HBF_RESULT, [HBF_OUTPUT], #2
	smlabt	HBF_ACC6, HBF_DATA, HBF_COEFF_0_2, HBF_ACC5
	smlabb	HBF_ACC5, HBF_DATA, HBF_COEFF_4_6, HBF_ACC4
	smlabt	HBF_ACC4, HBF_DATA, HBF_COEFF_4_6, HBF_ACC3
	smladx	HBF_ACC3, HBF_DATA, HBF_COEFF_7_6, HBF_ACC2
	smlabb	HBF_ACC2, HBF_DATA, HBF_COEFF_4_6, HBF_ACC1
	smlabt	HBF_ACC1, HBF_DATA, HBF_COEFF_0_2, HBF_ACC0
	smulbb	HBF_ACC0, HBF_DATA, HBF_COEFF_0_2

	ldr	HBF_DATA, [HBF_INPUT], #4
	smlabb	HBF_RESULT, HBF_DATA, HBF_COEFF_0_2, HBF_ACC6
	ssat	HBF_RESULT, #16, HBF_RESULT, ASR #15
	strh	HBF_RESULT, [HBF_OUTPUT], #2
	smlabt	HBF_ACC6, HBF_DATA, HBF_COEFF_0_2, HBF_ACC5
	smlabb	HBF_ACC5, HBF_DATA, HBF_COEFF_4_6, HBF_ACC4
	smlabt	HBF_ACC4, HBF_DATA, HBF_COEFF_4_6, HBF_ACC3
	smladx	HBF_ACC3, HBF_DATA, HBF_COEFF_7_6, HBF_ACC2
	smlabb	HBF_ACC2, HBF_DATA, HBF_COEFF_4_6, HBF_ACC1
	smlabt	HBF_ACC1, HBF_DATA, HBF_COEFF_0_2, HBF_ACC0
	smulbb	HBF_ACC0, HBF_DATA, HBF_COEFF_0_2

	ldr	HBF_DATA, [HBF_INPUT], #4
	smlabb	HBF_RESULT, HBF_DATA, HBF_COEFF_0_2, HBF_ACC6
	ssat	HBF_RESULT, #16, HBF_RESULT, ASR #15
	strh	HBF_RESULT, [HBF_OUTPUT], #2
	smlabt	HBF_ACC6, HBF_DATA, HBF_COEFF_0_2, HBF_ACC5
	smlabb	HBF_ACC5, HBF_DATA, HBF_COEFF_4_6, HBF_ACC4
	smlabt	HBF_ACC4, HBF_DATA, HBF_COEFF_4_6, HBF_ACC3
	smladx	HBF_ACC3, HBF_DATA, HBF_COEFF_7_6, HBF_ACC2
	smlabb	HBF_ACC2, HBF_DATA, HBF_COEFF_4_6, HBF_ACC1
	smlabt	HBF_ACC1, HBF_DATA, HBF_COEFF_0_2, HBF_ACC0
	smulbb	HBF_ACC0, HBF_DATA, HBF_COEFF_0_2

	cmp.w	HBF_INPUT, HBF_INPUT_E
	bne.w	1b

	ldr	HBF_DATA, [HBF_INPUT], #4
	smlabb	HBF_RESULT, HBF_DATA, HBF_COEFF_0_2, HBF_ACC6
	ssat	HBF_RESULT, #16, HBF_RESULT, ASR #15
	strh	HBF_RESULT, [HBF_OUTPUT], #2
	smlabt	HBF_ACC6, HBF_DATA, HBF_COEFF_0_2, HBF_ACC5
	smlabb	HBF_ACC5, HBF_DATA, HBF_COEFF_4_6, HBF_ACC4
	smlabt	HBF_ACC4, HBF_DATA, HBF_COEFF_4_6, HBF_ACC3
	smladx	HBF_ACC3, HBF_DATA, HBF_COEFF_7_6, HBF_ACC2
	smlabb	HBF_ACC2, HBF_DATA, HBF_COEFF_4_6, HBF_ACC1
	smlabt	HBF_ACC1, HBF_DATA, HBF_COEFF_0_2, HBF_ACC0
	smulbb	HBF_ACC0, HBF_DATA, HBF_COEFF_0_2

	ldr	HBF_DATA, [HBF_INPUT], #4
	smlabb	HBF_RESULT, HBF_DATA, HBF_COEFF_0_2, HBF_ACC6
	ssat	HBF_RESULT, #16, HBF_RESULT, ASR #15
	strh	HBF_RESULT, [HBF_OUTPUT], #2
	smlabt	HBF_ACC6, HBF_DATA, HBF_COEFF_0_2, HBF_ACC5
	smlabb	HBF_ACC5, HBF_DATA, HBF_COEFF_4_6, HBF_ACC4
	smlabt	HBF_ACC4, HBF_DATA, HBF_COEFF_4_6, HBF_ACC3
	smladx	HBF_ACC3, HBF_DATA, HBF_COEFF_7_6, HBF_ACC2
	smlabb	HBF_ACC2, HBF_DATA, HBF_COEFF_4_6, HBF_ACC1
	smlabt	HBF_ACC1, HBF_DATA, HBF_COEFF_0_2, HBF_ACC0

	ldr	HBF_DATA, [HBF_INPUT], #4
	smlabb	HBF_RESULT, HBF_DATA, HBF_COEFF_0_2, HBF_ACC6
	ssat	HBF_RESULT, #16, HBF_RESULT, ASR #15
	strh	HBF_RESULT, [HBF_OUTPUT], #2
	smlabt	HBF_ACC6, HBF_DATA, HBF_COEFF_0_2, HBF_ACC5
	smlabb	HBF_ACC5, HBF_DATA, HBF_COEFF_4_6, HBF_ACC4
	smlabt	HBF_ACC4, HBF_DATA, HBF_COEFF_4_6, HBF_ACC3
	smladx	HBF_ACC3, HBF_DATA, HBF_COEFF_7_6, HBF_ACC2
	smlabb	HBF_ACC2, HBF_DATA, HBF_COEFF_4_6, HBF_ACC1

	ldr	HBF_DATA, [HBF_INPUT], #4
	smlabb	HBF_RESULT, HBF_DATA, HBF_COEFF_0_2, HBF_ACC6
	ssat	HBF_RESULT, #16, HBF_RESULT, ASR #15
	strh	HBF_RESULT, [HBF_OUTPUT], #2
	smlabt	HBF_ACC6, HBF_DATA, HBF_COEFF_0_2, HBF_ACC5
	smlabb	HBF_ACC5, HBF_DATA, HBF_COEFF_4_6, HBF_ACC4
	smlabt	HBF_ACC4, HBF_DATA, HBF_COEFF_4_6, HBF_ACC3
	smladx	HBF_ACC3, HBF_DATA, HBF_COEFF_7_6, HBF_ACC2

	ldr	HBF_DATA, [HBF_INPUT], #4
	smlabb	HBF_RESULT, HBF_DATA, HBF_COEFF_0_2, HBF_ACC6
	ssat	HBF_RESULT, #16, HBF_RESULT, ASR #15
	strh	HBF_RESULT, [HBF_OUTPUT], #2
	smlabt	HBF_ACC6, HBF_DATA, HBF_COEFF_0_2, HBF_ACC5
	smlabb	HBF_ACC5, HBF_DATA, HBF_COEFF_4_6, HBF_ACC4
	smlabt	HBF_ACC4, HBF_DATA, HBF_COEFF_4_6, HBF_ACC3

	ldr	HBF_DATA, [HBF_INPUT], #4
	smlabb	HBF_RESULT, HBF_DATA, HBF_COEFF_0_2, HBF_ACC6
	ssat	HBF_RESULT, #16, HBF_RESULT, ASR #15
	strh	HBF_RESULT, [HBF_OUTPUT], #2
	smlabt	HBF_ACC6, HBF_DATA, HBF_COEFF_0_2, HBF_ACC5
	smlabb	HBF_ACC5, HBF_DATA, HBF_COEFF_4_6, HBF_ACC4

	ldr	HBF_DATA, [HBF_INPUT], #4
	smlabb	HBF_RESULT, HBF_DATA, HBF_COEFF_0_2, HBF_ACC6
	ssat	HBF_RESULT, #16, HBF_RESULT, ASR #15
	strh	HBF_RESULT, [HBF_OUTPUT], #2
	smlabt	HBF_ACC6, HBF_DATA, HBF_COEFF_0_2, HBF_ACC5

	ldr	HBF_DATA, [HBF_INPUT], #4
	smlabb	HBF_RESULT, HBF_DATA, HBF_COEFF_0_2, HBF_ACC6
	ssat	HBF_RESULT, #16, HBF_RESULT, ASR #15
	strh	HBF_RESULT, [HBF_OUTPUT], #2

	sub.w	r1, HBF_INPUT, #28
	ldr.w	r0, [sp, #HBF_STACK_STATE]
	ldm     r1!, { r2-r8 }
	stm     r0!, { r2-r8 }
	
	pop	{ r1, r2, r3, r4-r11, pc }


	// armv7m_pdm_fir64_x2(int16_t *output, const int16_t *input, uint32_t count, armv7m_pdm_fir_state_t *state)
	// armv7m_pdm_fir64_x2_stereo(int16_t *output, const int16_t *input, uint32_t count, armv7m_pdm_fir_state_t *state)
	//
	// R0 is OUTPUT
	// R1 is INPUT
	// R2 is COUNT
	// R3 is STATE

#define FIR_STACK_INPUT   4
#define FIR_STACK_INPUT_E 8
#define FIR_STACK_STATE   12
	
#define FIR_INPUT    r0
#define FIR_STATE    r1
#define FIR_DATA_0   r1
#define FIR_DATA_1   r2
#define FIR_DATA_2   r3
#define FIR_DATA_3   r4
#define FIR_DATA_4   r1
#define FIR_DATA_5   r2
#define FIR_DATA_6   r3
#define FIR_DATA_7   r4
#define FIR_DATA_8   r1
#define FIR_DATA_9   r2
#define FIR_DATA_10  r3
#define FIR_DATA_11  r4
#define FIR_DATA_12  r1
#define FIR_DATA_13  r2
#define FIR_DATA_14  r3
#define FIR_DATA_15  r4
#define FIR_DATA_16  r1
#define FIR_DATA_17  r2
#define FIR_DATA_18  r3
#define FIR_DATA_19  r4
#define FIR_DATA_20  r1
#define FIR_DATA_21  r2
#define FIR_DATA_22  r3
#define FIR_DATA_23  r4
#define FIR_DATA_24  r1
#define FIR_DATA_25  r2
#define FIR_DATA_26  r3
#define FIR_DATA_27  r4
#define FIR_DATA_28  r1
#define FIR_DATA_29  r2
#define FIR_DATA_30  r3
#define FIR_DATA_31  r4
#define FIR_DATA_32  r1
#define FIR_DATA_33  r2
#define FIR_DATA_34  r3
#define FIR_COEFF_0  r5
#define FIR_COEFF_1  r6
#define FIR_COEFF_2  r7
#define FIR_COEFF_3  r8
#define FIR_COEFF_4  r5
#define FIR_COEFF_5  r6
#define FIR_COEFF_6  r7
#define FIR_COEFF_7  r8
#define FIR_COEFF_8  r5
#define FIR_COEFF_9  r6
#define FIR_COEFF_10 r7
#define FIR_COEFF_11 r8
#define FIR_COEFF_12 r5
#define FIR_COEFF_13 r6
#define FIR_COEFF_14 r7
#define FIR_COEFF_15 r8
#define FIR_COEFF_16 r8
#define FIR_COEFF_17 r7
#define FIR_COEFF_18 r6
#define FIR_COEFF_19 r5
#define FIR_COEFF_20 r8
#define FIR_COEFF_21 r7
#define FIR_COEFF_22 r6
#define FIR_COEFF_23 r5
#define FIR_COEFF_24 r8
#define FIR_COEFF_25 r7
#define FIR_COEFF_26 r6
#define FIR_COEFF_27 r5
#define FIR_COEFF_28 r8
#define FIR_COEFF_29 r7
#define FIR_COEFF_30 r6
#define FIR_COEFF_31 r5
#define FIR_ACC0     r9
#define FIR_ACC1     r10
#define FIR_ACC2     r11
#define FIR_ACC3     r12
#define FIR_OUTPUT   lr

#define IIR_Y        r2
#define IIR_X        r3
#define IIR_A1       r4
#define IIR_B0       r5
#define IIR_B1       r6
#define IIR_GAIN     r7
#define IIR_RESULT_0 r8	
#define IIR_RESULT_1 r9	
#define IIR_RESULT_2 r10	
#define IIR_RESULT_3 r11	
	
        .section .text.armv7m_pdm64_x2_mono, "ax"
	.thumb
	.thumb_func
	.type	armv7m_pdm_fir64_x2_mono, %function
	.align	3
armv7m_pdm_fir64_x2_mono:
	push	{ r1-r3, r4-r11, lr }

	mrs	r3, CONTROL
	push.w	{ r3 }

	mov     FIR_OUTPUT, r0
	mov	FIR_INPUT, r1
	add	r2, r1, r2, LSL #1
	str.w	r2, [sp, #FIR_STACK_INPUT_E]
	movw	r12, #:lower16:armv7m_pdm_fir64_coeff
	movt	r12, #:upper16:armv7m_pdm_fir64_coeff
	vldm	r12, { s0-s15 }

	.align	3
1:	ldm.w	FIR_INPUT!, { FIR_DATA_0, FIR_DATA_1, FIR_DATA_2, FIR_DATA_3 }
	vmov    FIR_COEFF_0, s0
	smuad	FIR_ACC0, FIR_DATA_0, FIR_COEFF_0
	vmov    FIR_COEFF_1, s1
	smuad	FIR_ACC1, FIR_DATA_1, FIR_COEFF_0
	smlad	FIR_ACC0, FIR_DATA_1, FIR_COEFF_1, FIR_ACC0
	vmov    FIR_COEFF_2, s2
	smuad	FIR_ACC2, FIR_DATA_2, FIR_COEFF_0
	smlad	FIR_ACC1, FIR_DATA_2, FIR_COEFF_1, FIR_ACC1
	smlad	FIR_ACC0, FIR_DATA_2, FIR_COEFF_2, FIR_ACC0
	vmov    FIR_COEFF_3, s3
	smuad	FIR_ACC3, FIR_DATA_3, FIR_COEFF_0
	smlad	FIR_ACC2, FIR_DATA_3, FIR_COEFF_1, FIR_ACC2
	smlad	FIR_ACC1, FIR_DATA_3, FIR_COEFF_2, FIR_ACC1
	smlad	FIR_ACC0, FIR_DATA_3, FIR_COEFF_3, FIR_ACC0

	ldm.w	FIR_INPUT!, { FIR_DATA_4, FIR_DATA_5, FIR_DATA_6, FIR_DATA_7 }
	vmov    FIR_COEFF_4, s4
	smlad	FIR_ACC3, FIR_DATA_4, FIR_COEFF_1, FIR_ACC3
	smlad	FIR_ACC2, FIR_DATA_4, FIR_COEFF_2, FIR_ACC2
	smlad	FIR_ACC1, FIR_DATA_4, FIR_COEFF_3, FIR_ACC1
	smlad	FIR_ACC0, FIR_DATA_4, FIR_COEFF_4, FIR_ACC0
	vmov    FIR_COEFF_5, s5
	smlad	FIR_ACC3, FIR_DATA_5, FIR_COEFF_2, FIR_ACC3
	smlad	FIR_ACC2, FIR_DATA_5, FIR_COEFF_3, FIR_ACC2
	smlad	FIR_ACC1, FIR_DATA_5, FIR_COEFF_4, FIR_ACC1
	smlad	FIR_ACC0, FIR_DATA_5, FIR_COEFF_5, FIR_ACC0
	vmov    FIR_COEFF_6, s6
	smlad	FIR_ACC3, FIR_DATA_6, FIR_COEFF_3, FIR_ACC3
	smlad	FIR_ACC2, FIR_DATA_6, FIR_COEFF_4, FIR_ACC2
	smlad	FIR_ACC1, FIR_DATA_6, FIR_COEFF_5, FIR_ACC1
	smlad	FIR_ACC0, FIR_DATA_6, FIR_COEFF_6, FIR_ACC0
	vmov    FIR_COEFF_7, s7
	smlad	FIR_ACC3, FIR_DATA_7, FIR_COEFF_4, FIR_ACC3
	smlad	FIR_ACC2, FIR_DATA_7, FIR_COEFF_5, FIR_ACC2
	smlad	FIR_ACC1, FIR_DATA_7, FIR_COEFF_6, FIR_ACC1
	smlad	FIR_ACC0, FIR_DATA_7, FIR_COEFF_7, FIR_ACC0

	ldm.w	FIR_INPUT!, { FIR_DATA_8, FIR_DATA_9, FIR_DATA_10, FIR_DATA_11 }
	vmov    FIR_COEFF_8, s8
	smlad	FIR_ACC3, FIR_DATA_8, FIR_COEFF_5, FIR_ACC3
	smlad	FIR_ACC2, FIR_DATA_8, FIR_COEFF_6, FIR_ACC2
	smlad	FIR_ACC1, FIR_DATA_8, FIR_COEFF_7, FIR_ACC1
	smlad	FIR_ACC0, FIR_DATA_8, FIR_COEFF_8, FIR_ACC0
	vmov    FIR_COEFF_9, s9
	smlad	FIR_ACC3, FIR_DATA_9, FIR_COEFF_6, FIR_ACC3
	smlad	FIR_ACC2, FIR_DATA_9, FIR_COEFF_7, FIR_ACC2
	smlad	FIR_ACC1, FIR_DATA_9, FIR_COEFF_8, FIR_ACC1
	smlad	FIR_ACC0, FIR_DATA_9, FIR_COEFF_9, FIR_ACC0
	vmov    FIR_COEFF_10, s10
	smlad	FIR_ACC3, FIR_DATA_10, FIR_COEFF_7, FIR_ACC3
	smlad	FIR_ACC2, FIR_DATA_10, FIR_COEFF_8, FIR_ACC2
	smlad	FIR_ACC1, FIR_DATA_10, FIR_COEFF_9, FIR_ACC1
	smlad	FIR_ACC0, FIR_DATA_10, FIR_COEFF_10, FIR_ACC0
	vmov    FIR_COEFF_11, s11
	smlad	FIR_ACC3, FIR_DATA_11, FIR_COEFF_8, FIR_ACC3
	smlad	FIR_ACC2, FIR_DATA_11, FIR_COEFF_9, FIR_ACC2
	smlad	FIR_ACC1, FIR_DATA_11, FIR_COEFF_10, FIR_ACC1
	smlad	FIR_ACC0, FIR_DATA_11, FIR_COEFF_11, FIR_ACC0

	ldm.w	FIR_INPUT!, { FIR_DATA_12, FIR_DATA_13, FIR_DATA_14, FIR_DATA_15 }
	vmov    FIR_COEFF_12, s12
	smlad	FIR_ACC3, FIR_DATA_12, FIR_COEFF_9, FIR_ACC3
	smlad	FIR_ACC2, FIR_DATA_12, FIR_COEFF_10, FIR_ACC2
	smlad	FIR_ACC1, FIR_DATA_12, FIR_COEFF_11, FIR_ACC1
	smlad	FIR_ACC0, FIR_DATA_12, FIR_COEFF_12, FIR_ACC0
	vmov    FIR_COEFF_13, s13
	smlad	FIR_ACC3, FIR_DATA_13, FIR_COEFF_10, FIR_ACC3
	smlad	FIR_ACC2, FIR_DATA_13, FIR_COEFF_11, FIR_ACC2
	smlad	FIR_ACC1, FIR_DATA_13, FIR_COEFF_12, FIR_ACC1
	smlad	FIR_ACC0, FIR_DATA_13, FIR_COEFF_13, FIR_ACC0
	vmov    FIR_COEFF_14, s14
	smlad	FIR_ACC3, FIR_DATA_14, FIR_COEFF_11, FIR_ACC3
	smlad	FIR_ACC2, FIR_DATA_14, FIR_COEFF_12, FIR_ACC2
	smlad	FIR_ACC1, FIR_DATA_14, FIR_COEFF_13, FIR_ACC1
	smlad	FIR_ACC0, FIR_DATA_14, FIR_COEFF_14, FIR_ACC0
	vmov    FIR_COEFF_15, s15
	smlad	FIR_ACC3, FIR_DATA_15, FIR_COEFF_12, FIR_ACC3
	smlad	FIR_ACC2, FIR_DATA_15, FIR_COEFF_13, FIR_ACC2
	smlad	FIR_ACC1, FIR_DATA_15, FIR_COEFF_14, FIR_ACC1
	smlad	FIR_ACC0, FIR_DATA_15, FIR_COEFF_15, FIR_ACC0

	ldm.w	FIR_INPUT!, { FIR_DATA_16, FIR_DATA_17, FIR_DATA_18, FIR_DATA_19 }
	// vmov    FIR_COEFF_16, s15
	smlad	FIR_ACC3, FIR_DATA_16, FIR_COEFF_13, FIR_ACC3
	smlad	FIR_ACC2, FIR_DATA_16, FIR_COEFF_14, FIR_ACC2
	smlad	FIR_ACC1, FIR_DATA_16, FIR_COEFF_15, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_16, FIR_COEFF_16, FIR_ACC0
	// vmov    FIR_COEFF_17, s14
	smlad	FIR_ACC3, FIR_DATA_17, FIR_COEFF_14, FIR_ACC3
	smlad	FIR_ACC2, FIR_DATA_17, FIR_COEFF_15, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_17, FIR_COEFF_16, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_17, FIR_COEFF_17, FIR_ACC0
	// vmov    FIR_COEFF_18, s13
	smlad	FIR_ACC3, FIR_DATA_18, FIR_COEFF_15, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_18, FIR_COEFF_16, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_18, FIR_COEFF_17, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_18, FIR_COEFF_18, FIR_ACC0
	// vmov    FIR_COEFF_19, s12
	smladx	FIR_ACC3, FIR_DATA_19, FIR_COEFF_16, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_19, FIR_COEFF_17, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_19, FIR_COEFF_18, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_19, FIR_COEFF_19, FIR_ACC0

	ldm.w	FIR_INPUT!, { FIR_DATA_20, FIR_DATA_21, FIR_DATA_22, FIR_DATA_23 }
	vmov    FIR_COEFF_20, s11
	smladx	FIR_ACC3, FIR_DATA_20, FIR_COEFF_17, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_20, FIR_COEFF_18, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_20, FIR_COEFF_19, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_20, FIR_COEFF_20, FIR_ACC0
	vmov    FIR_COEFF_21, s10
	smladx	FIR_ACC3, FIR_DATA_21, FIR_COEFF_18, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_21, FIR_COEFF_19, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_21, FIR_COEFF_20, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_21, FIR_COEFF_21, FIR_ACC0
	vmov    FIR_COEFF_22, s9
	smladx	FIR_ACC3, FIR_DATA_22, FIR_COEFF_19, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_22, FIR_COEFF_20, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_22, FIR_COEFF_21, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_22, FIR_COEFF_22, FIR_ACC0
	vmov    FIR_COEFF_23, s8
	smladx	FIR_ACC3, FIR_DATA_23, FIR_COEFF_20, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_23, FIR_COEFF_21, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_23, FIR_COEFF_22, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_23, FIR_COEFF_23, FIR_ACC0

	ldm.w	FIR_INPUT!, { FIR_DATA_24, FIR_DATA_25, FIR_DATA_26, FIR_DATA_27 }
	vmov    FIR_COEFF_24, s7
	smladx	FIR_ACC3, FIR_DATA_24, FIR_COEFF_21, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_24, FIR_COEFF_22, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_24, FIR_COEFF_23, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_24, FIR_COEFF_24, FIR_ACC0
	vmov    FIR_COEFF_25, s6
	smladx	FIR_ACC3, FIR_DATA_25, FIR_COEFF_22, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_25, FIR_COEFF_23, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_25, FIR_COEFF_24, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_25, FIR_COEFF_25, FIR_ACC0
	vmov    FIR_COEFF_26, s5
	smladx	FIR_ACC3, FIR_DATA_26, FIR_COEFF_23, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_26, FIR_COEFF_24, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_26, FIR_COEFF_25, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_26, FIR_COEFF_26, FIR_ACC0
	vmov    FIR_COEFF_27, s4
	smladx	FIR_ACC3, FIR_DATA_27, FIR_COEFF_24, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_27, FIR_COEFF_25, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_27, FIR_COEFF_26, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_27, FIR_COEFF_27, FIR_ACC0

	ldm.w	FIR_INPUT!, { FIR_DATA_28, FIR_DATA_29, FIR_DATA_30, FIR_DATA_31 }
	vmov    FIR_COEFF_28, s3
	smladx	FIR_ACC3, FIR_DATA_28, FIR_COEFF_25, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_28, FIR_COEFF_26, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_28, FIR_COEFF_27, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_28, FIR_COEFF_28, FIR_ACC0
	vmov    FIR_COEFF_29, s2
	smladx	FIR_ACC3, FIR_DATA_29, FIR_COEFF_26, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_29, FIR_COEFF_27, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_29, FIR_COEFF_28, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_29, FIR_COEFF_29, FIR_ACC0
	vmov    FIR_COEFF_30, s1
	smladx	FIR_ACC3, FIR_DATA_30, FIR_COEFF_27, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_30, FIR_COEFF_28, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_30, FIR_COEFF_29, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_30, FIR_COEFF_30, FIR_ACC0
	vmov    FIR_COEFF_31, s0
	smladx	FIR_ACC3, FIR_DATA_31, FIR_COEFF_28, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_31, FIR_COEFF_29, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_31, FIR_COEFF_30, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_31, FIR_COEFF_31, FIR_ACC0

	ldm.w	FIR_INPUT!, { FIR_DATA_32, FIR_DATA_33, FIR_DATA_34 }
	smladx	FIR_ACC3, FIR_DATA_32, FIR_COEFF_29, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_32, FIR_COEFF_30, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_32, FIR_COEFF_31, FIR_ACC1
	smladx	FIR_ACC3, FIR_DATA_33, FIR_COEFF_30, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_33, FIR_COEFF_31, FIR_ACC2
	smladx	FIR_ACC3, FIR_DATA_34, FIR_COEFF_31, FIR_ACC3

	ldr.w	FIR_STATE, [sp, #FIR_STACK_STATE]
	ldm.w	FIR_STATE, { IIR_Y, IIR_X, IIR_A1, IIR_B0, IIR_B1, IIR_GAIN }

	smmulr  IIR_Y, IIR_Y, IIR_A1
	smmlar  IIR_Y, FIR_ACC0, IIR_B0, IIR_Y
	smmlar  IIR_Y, IIR_X, IIR_B1, IIR_Y
	ssat	IIR_Y, #31, IIR_Y, LSL #2
	smmulr  IIR_RESULT_0, IIR_Y, IIR_GAIN
	ssat	IIR_RESULT_0, #16, IIR_RESULT_0, ASR #6
	strh	IIR_RESULT_0, [FIR_OUTPUT], #2

	smmulr  IIR_Y, IIR_Y, IIR_A1
	smmlar  IIR_Y, FIR_ACC1, IIR_B0, IIR_Y
	smmlar  IIR_Y, FIR_ACC0, IIR_B1, IIR_Y
	ssat	IIR_Y, #31, IIR_Y, LSL #2
	smmulr  IIR_RESULT_1, IIR_Y, IIR_GAIN
	ssat	IIR_RESULT_1, #16, IIR_RESULT_1, ASR #6
	strh	IIR_RESULT_1, [FIR_OUTPUT], #2

	smmulr  IIR_Y, IIR_Y, IIR_A1
	smmlar  IIR_Y, FIR_ACC2, IIR_B0, IIR_Y
	smmlar  IIR_Y, FIR_ACC1, IIR_B1, IIR_Y
	ssat	IIR_Y, #31, IIR_Y, LSL #2
	smmulr  IIR_RESULT_2, IIR_Y, IIR_GAIN
	ssat	IIR_RESULT_2, #16, IIR_RESULT_2, ASR #6
	strh	IIR_RESULT_2, [FIR_OUTPUT], #2

	smmulr  IIR_Y, IIR_Y, IIR_A1
	smmlar  IIR_Y, FIR_ACC3, IIR_B0, IIR_Y
	smmlar  IIR_Y, FIR_ACC2, IIR_B1, IIR_Y
	ssat	IIR_Y, #31, IIR_Y, LSL #2
	smmulr  IIR_RESULT_3, IIR_Y, IIR_GAIN
	ssat	IIR_RESULT_3, #16, IIR_RESULT_3, ASR #6
	strh	IIR_RESULT_3, [FIR_OUTPUT], #2
	
	stm	FIR_STATE, { IIR_Y, FIR_ACC3 }
	
	sub	FIR_INPUT, #((35-4)*4)
	ldr	r1, [sp, #FIR_STACK_INPUT_E]
	cmp	FIR_INPUT, r1
	bne	1b

	ldr.w	r0, [sp, #FIR_STACK_INPUT]
	vldm	r1!, { s0-s15 }
	vstm	r0!, { s0-s15 }
	vldm	r1!, { s0-s15 }
	vstm	r0!, { s0-s15 }

	pop.w	{ r3 }
	msr	CONTROL, r3 
	
	pop.w	{ r1-r3, r4-r11, pc }


        .section .text.armv7m_pdm64_x2_stereo, "ax"
	.thumb
	.thumb_func
	.type	armv7m_pdm_fir64_x2_stereo, %function
	.align	3
armv7m_pdm_fir64_x2_stereo:
	push	{ r1-r3, r4-r11, lr }

	mrs	r3, CONTROL
	push.w	{ r3 }

	mov     FIR_OUTPUT, r0
	mov	FIR_INPUT, r1
	add	r2, r1, r2, LSL #1
	str.w	r2, [sp, #FIR_STACK_INPUT_E]
	movw	r12, #:lower16:armv7m_pdm_fir64_coeff
	movt	r12, #:upper16:armv7m_pdm_fir64_coeff
	vldm	r12, { s0-s15 }

	.align	3
1:	ldm.w	FIR_INPUT!, { FIR_DATA_0, FIR_DATA_1, FIR_DATA_2, FIR_DATA_3 }
	vmov    FIR_COEFF_0, s0
	smuad	FIR_ACC0, FIR_DATA_0, FIR_COEFF_0
	vmov    FIR_COEFF_1, s1
	smuad	FIR_ACC1, FIR_DATA_1, FIR_COEFF_0
	smlad	FIR_ACC0, FIR_DATA_1, FIR_COEFF_1, FIR_ACC0
	vmov    FIR_COEFF_2, s2
	smuad	FIR_ACC2, FIR_DATA_2, FIR_COEFF_0
	smlad	FIR_ACC1, FIR_DATA_2, FIR_COEFF_1, FIR_ACC1
	smlad	FIR_ACC0, FIR_DATA_2, FIR_COEFF_2, FIR_ACC0
	vmov    FIR_COEFF_3, s3
	smuad	FIR_ACC3, FIR_DATA_3, FIR_COEFF_0
	smlad	FIR_ACC2, FIR_DATA_3, FIR_COEFF_1, FIR_ACC2
	smlad	FIR_ACC1, FIR_DATA_3, FIR_COEFF_2, FIR_ACC1
	smlad	FIR_ACC0, FIR_DATA_3, FIR_COEFF_3, FIR_ACC0

	ldm.w	FIR_INPUT!, { FIR_DATA_4, FIR_DATA_5, FIR_DATA_6, FIR_DATA_7 }
	vmov    FIR_COEFF_4, s4
	smlad	FIR_ACC3, FIR_DATA_4, FIR_COEFF_1, FIR_ACC3
	smlad	FIR_ACC2, FIR_DATA_4, FIR_COEFF_2, FIR_ACC2
	smlad	FIR_ACC1, FIR_DATA_4, FIR_COEFF_3, FIR_ACC1
	smlad	FIR_ACC0, FIR_DATA_4, FIR_COEFF_4, FIR_ACC0
	vmov    FIR_COEFF_5, s5
	smlad	FIR_ACC3, FIR_DATA_5, FIR_COEFF_2, FIR_ACC3
	smlad	FIR_ACC2, FIR_DATA_5, FIR_COEFF_3, FIR_ACC2
	smlad	FIR_ACC1, FIR_DATA_5, FIR_COEFF_4, FIR_ACC1
	smlad	FIR_ACC0, FIR_DATA_5, FIR_COEFF_5, FIR_ACC0
	vmov    FIR_COEFF_6, s6
	smlad	FIR_ACC3, FIR_DATA_6, FIR_COEFF_3, FIR_ACC3
	smlad	FIR_ACC2, FIR_DATA_6, FIR_COEFF_4, FIR_ACC2
	smlad	FIR_ACC1, FIR_DATA_6, FIR_COEFF_5, FIR_ACC1
	smlad	FIR_ACC0, FIR_DATA_6, FIR_COEFF_6, FIR_ACC0
	vmov    FIR_COEFF_7, s7
	smlad	FIR_ACC3, FIR_DATA_7, FIR_COEFF_4, FIR_ACC3
	smlad	FIR_ACC2, FIR_DATA_7, FIR_COEFF_5, FIR_ACC2
	smlad	FIR_ACC1, FIR_DATA_7, FIR_COEFF_6, FIR_ACC1
	smlad	FIR_ACC0, FIR_DATA_7, FIR_COEFF_7, FIR_ACC0

	ldm.w	FIR_INPUT!, { FIR_DATA_8, FIR_DATA_9, FIR_DATA_10, FIR_DATA_11 }
	vmov    FIR_COEFF_8, s8
	smlad	FIR_ACC3, FIR_DATA_8, FIR_COEFF_5, FIR_ACC3
	smlad	FIR_ACC2, FIR_DATA_8, FIR_COEFF_6, FIR_ACC2
	smlad	FIR_ACC1, FIR_DATA_8, FIR_COEFF_7, FIR_ACC1
	smlad	FIR_ACC0, FIR_DATA_8, FIR_COEFF_8, FIR_ACC0
	vmov    FIR_COEFF_9, s9
	smlad	FIR_ACC3, FIR_DATA_9, FIR_COEFF_6, FIR_ACC3
	smlad	FIR_ACC2, FIR_DATA_9, FIR_COEFF_7, FIR_ACC2
	smlad	FIR_ACC1, FIR_DATA_9, FIR_COEFF_8, FIR_ACC1
	smlad	FIR_ACC0, FIR_DATA_9, FIR_COEFF_9, FIR_ACC0
	vmov    FIR_COEFF_10, s10
	smlad	FIR_ACC3, FIR_DATA_10, FIR_COEFF_7, FIR_ACC3
	smlad	FIR_ACC2, FIR_DATA_10, FIR_COEFF_8, FIR_ACC2
	smlad	FIR_ACC1, FIR_DATA_10, FIR_COEFF_9, FIR_ACC1
	smlad	FIR_ACC0, FIR_DATA_10, FIR_COEFF_10, FIR_ACC0
	vmov    FIR_COEFF_11, s11
	smlad	FIR_ACC3, FIR_DATA_11, FIR_COEFF_8, FIR_ACC3
	smlad	FIR_ACC2, FIR_DATA_11, FIR_COEFF_9, FIR_ACC2
	smlad	FIR_ACC1, FIR_DATA_11, FIR_COEFF_10, FIR_ACC1
	smlad	FIR_ACC0, FIR_DATA_11, FIR_COEFF_11, FIR_ACC0

	ldm.w	FIR_INPUT!, { FIR_DATA_12, FIR_DATA_13, FIR_DATA_14, FIR_DATA_15 }
	vmov    FIR_COEFF_12, s12
	smlad	FIR_ACC3, FIR_DATA_12, FIR_COEFF_9, FIR_ACC3
	smlad	FIR_ACC2, FIR_DATA_12, FIR_COEFF_10, FIR_ACC2
	smlad	FIR_ACC1, FIR_DATA_12, FIR_COEFF_11, FIR_ACC1
	smlad	FIR_ACC0, FIR_DATA_12, FIR_COEFF_12, FIR_ACC0
	vmov    FIR_COEFF_13, s13
	smlad	FIR_ACC3, FIR_DATA_13, FIR_COEFF_10, FIR_ACC3
	smlad	FIR_ACC2, FIR_DATA_13, FIR_COEFF_11, FIR_ACC2
	smlad	FIR_ACC1, FIR_DATA_13, FIR_COEFF_12, FIR_ACC1
	smlad	FIR_ACC0, FIR_DATA_13, FIR_COEFF_13, FIR_ACC0
	vmov    FIR_COEFF_14, s14
	smlad	FIR_ACC3, FIR_DATA_14, FIR_COEFF_11, FIR_ACC3
	smlad	FIR_ACC2, FIR_DATA_14, FIR_COEFF_12, FIR_ACC2
	smlad	FIR_ACC1, FIR_DATA_14, FIR_COEFF_13, FIR_ACC1
	smlad	FIR_ACC0, FIR_DATA_14, FIR_COEFF_14, FIR_ACC0
	vmov    FIR_COEFF_15, s15
	smlad	FIR_ACC3, FIR_DATA_15, FIR_COEFF_12, FIR_ACC3
	smlad	FIR_ACC2, FIR_DATA_15, FIR_COEFF_13, FIR_ACC2
	smlad	FIR_ACC1, FIR_DATA_15, FIR_COEFF_14, FIR_ACC1
	smlad	FIR_ACC0, FIR_DATA_15, FIR_COEFF_15, FIR_ACC0

	ldm.w	FIR_INPUT!, { FIR_DATA_16, FIR_DATA_17, FIR_DATA_18, FIR_DATA_19 }
	// vmov    FIR_COEFF_16, s15
	smlad	FIR_ACC3, FIR_DATA_16, FIR_COEFF_13, FIR_ACC3
	smlad	FIR_ACC2, FIR_DATA_16, FIR_COEFF_14, FIR_ACC2
	smlad	FIR_ACC1, FIR_DATA_16, FIR_COEFF_15, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_16, FIR_COEFF_16, FIR_ACC0
	// vmov    FIR_COEFF_17, s14
	smlad	FIR_ACC3, FIR_DATA_17, FIR_COEFF_14, FIR_ACC3
	smlad	FIR_ACC2, FIR_DATA_17, FIR_COEFF_15, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_17, FIR_COEFF_16, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_17, FIR_COEFF_17, FIR_ACC0
	// vmov    FIR_COEFF_18, s13
	smlad	FIR_ACC3, FIR_DATA_18, FIR_COEFF_15, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_18, FIR_COEFF_16, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_18, FIR_COEFF_17, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_18, FIR_COEFF_18, FIR_ACC0
	// vmov    FIR_COEFF_19, s12
	smladx	FIR_ACC3, FIR_DATA_19, FIR_COEFF_16, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_19, FIR_COEFF_17, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_19, FIR_COEFF_18, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_19, FIR_COEFF_19, FIR_ACC0

	ldm.w	FIR_INPUT!, { FIR_DATA_20, FIR_DATA_21, FIR_DATA_22, FIR_DATA_23 }
	vmov    FIR_COEFF_20, s11
	smladx	FIR_ACC3, FIR_DATA_20, FIR_COEFF_17, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_20, FIR_COEFF_18, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_20, FIR_COEFF_19, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_20, FIR_COEFF_20, FIR_ACC0
	vmov    FIR_COEFF_21, s10
	smladx	FIR_ACC3, FIR_DATA_21, FIR_COEFF_18, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_21, FIR_COEFF_19, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_21, FIR_COEFF_20, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_21, FIR_COEFF_21, FIR_ACC0
	vmov    FIR_COEFF_22, s9
	smladx	FIR_ACC3, FIR_DATA_22, FIR_COEFF_19, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_22, FIR_COEFF_20, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_22, FIR_COEFF_21, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_22, FIR_COEFF_22, FIR_ACC0
	vmov    FIR_COEFF_23, s8
	smladx	FIR_ACC3, FIR_DATA_23, FIR_COEFF_20, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_23, FIR_COEFF_21, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_23, FIR_COEFF_22, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_23, FIR_COEFF_23, FIR_ACC0

	ldm.w	FIR_INPUT!, { FIR_DATA_24, FIR_DATA_25, FIR_DATA_26, FIR_DATA_27 }
	vmov    FIR_COEFF_24, s7
	smladx	FIR_ACC3, FIR_DATA_24, FIR_COEFF_21, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_24, FIR_COEFF_22, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_24, FIR_COEFF_23, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_24, FIR_COEFF_24, FIR_ACC0
	vmov    FIR_COEFF_25, s6
	smladx	FIR_ACC3, FIR_DATA_25, FIR_COEFF_22, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_25, FIR_COEFF_23, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_25, FIR_COEFF_24, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_25, FIR_COEFF_25, FIR_ACC0
	vmov    FIR_COEFF_26, s5
	smladx	FIR_ACC3, FIR_DATA_26, FIR_COEFF_23, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_26, FIR_COEFF_24, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_26, FIR_COEFF_25, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_26, FIR_COEFF_26, FIR_ACC0
	vmov    FIR_COEFF_27, s4
	smladx	FIR_ACC3, FIR_DATA_27, FIR_COEFF_24, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_27, FIR_COEFF_25, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_27, FIR_COEFF_26, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_27, FIR_COEFF_27, FIR_ACC0

	ldm.w	FIR_INPUT!, { FIR_DATA_28, FIR_DATA_29, FIR_DATA_30, FIR_DATA_31 }
	vmov    FIR_COEFF_28, s3
	smladx	FIR_ACC3, FIR_DATA_28, FIR_COEFF_25, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_28, FIR_COEFF_26, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_28, FIR_COEFF_27, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_28, FIR_COEFF_28, FIR_ACC0
	vmov    FIR_COEFF_29, s2
	smladx	FIR_ACC3, FIR_DATA_29, FIR_COEFF_26, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_29, FIR_COEFF_27, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_29, FIR_COEFF_28, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_29, FIR_COEFF_29, FIR_ACC0
	vmov    FIR_COEFF_30, s1
	smladx	FIR_ACC3, FIR_DATA_30, FIR_COEFF_27, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_30, FIR_COEFF_28, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_30, FIR_COEFF_29, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_30, FIR_COEFF_30, FIR_ACC0
	vmov    FIR_COEFF_31, s0
	smladx	FIR_ACC3, FIR_DATA_31, FIR_COEFF_28, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_31, FIR_COEFF_29, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_31, FIR_COEFF_30, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_31, FIR_COEFF_31, FIR_ACC0

	ldm.w	FIR_INPUT!, { FIR_DATA_32, FIR_DATA_33, FIR_DATA_34 }
	smladx	FIR_ACC3, FIR_DATA_32, FIR_COEFF_29, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_32, FIR_COEFF_30, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_32, FIR_COEFF_31, FIR_ACC1
	smladx	FIR_ACC3, FIR_DATA_33, FIR_COEFF_30, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_33, FIR_COEFF_31, FIR_ACC2
	smladx	FIR_ACC3, FIR_DATA_34, FIR_COEFF_31, FIR_ACC3

	ldr.w	FIR_STATE, [sp, #FIR_STACK_STATE]
	ldm.w	FIR_STATE, { IIR_Y, IIR_X, IIR_A1, IIR_B0, IIR_B1, IIR_GAIN }

	smmulr  IIR_Y, IIR_Y, IIR_A1
	smmlar  IIR_Y, FIR_ACC0, IIR_B0, IIR_Y
	smmlar  IIR_Y, IIR_X, IIR_B1, IIR_Y
	ssat	IIR_Y, #31, IIR_Y, LSL #2
	smmulr  IIR_RESULT_0, IIR_Y, IIR_GAIN
	ssat	IIR_RESULT_0, #16, IIR_RESULT_0, ASR #6
	strh	IIR_RESULT_0, [FIR_OUTPUT], #4

	smmulr  IIR_Y, IIR_Y, IIR_A1
	smmlar  IIR_Y, FIR_ACC1, IIR_B0, IIR_Y
	smmlar  IIR_Y, FIR_ACC0, IIR_B1, IIR_Y
	ssat	IIR_Y, #31, IIR_Y, LSL #2
	smmulr  IIR_RESULT_1, IIR_Y, IIR_GAIN
	ssat	IIR_RESULT_1, #16, IIR_RESULT_1, ASR #6
	strh	IIR_RESULT_1, [FIR_OUTPUT], #4

	smmulr  IIR_Y, IIR_Y, IIR_A1
	smmlar  IIR_Y, FIR_ACC2, IIR_B0, IIR_Y
	smmlar  IIR_Y, FIR_ACC1, IIR_B1, IIR_Y
	ssat	IIR_Y, #31, IIR_Y, LSL #2
	smmulr  IIR_RESULT_2, IIR_Y, IIR_GAIN
	ssat	IIR_RESULT_2, #16, IIR_RESULT_2, ASR #6
	strh	IIR_RESULT_2, [FIR_OUTPUT], #4

	smmulr  IIR_Y, IIR_Y, IIR_A1
	smmlar  IIR_Y, FIR_ACC3, IIR_B0, IIR_Y
	smmlar  IIR_Y, FIR_ACC2, IIR_B1, IIR_Y
	ssat	IIR_Y, #31, IIR_Y, LSL #2
	smmulr  IIR_RESULT_3, IIR_Y, IIR_GAIN
	ssat	IIR_RESULT_3, #16, IIR_RESULT_3, ASR #6
	strh	IIR_RESULT_3, [FIR_OUTPUT], #4
	
	stm	FIR_STATE, { IIR_Y, FIR_ACC3 }
	
	sub	FIR_INPUT, #((35-4)*4)
	ldr	r1, [sp, #FIR_STACK_INPUT_E]
	cmp	FIR_INPUT, r1
	bne	1b

	ldr.w	r0, [sp, #FIR_STACK_INPUT]
	vldm	r1!, { s0-s15 }
	vstm	r0!, { s0-s15 }
	vldm	r1!, { s0-s15 }
	vstm	r0!, { s0-s15 }

	pop.w	{ r3 }
	msr	CONTROL, r3 
	
	pop.w	{ r1-r3, r4-r11, pc }
	

        .section .text.armv7m_pdm64_x2_discard, "ax"
	.thumb
	.thumb_func
	.type	armv7m_pdm_fir64_x2_discard, %function
	.align	3
armv7m_pdm_fir64_x2_discard:
	push	{ r1-r3, r4-r11, lr }

	mrs	r3, CONTROL
	push.w	{ r3 }

	mov     FIR_OUTPUT, r0
	mov	FIR_INPUT, r1
	add	r2, r1, r2, LSL #1
	str.w	r2, [sp, #FIR_STACK_INPUT_E]
	movw	r12, #:lower16:armv7m_pdm_fir64_coeff
	movt	r12, #:upper16:armv7m_pdm_fir64_coeff
	vldm	r12, { s0-s15 }

	.align	3
1:	ldm.w	FIR_INPUT!, { FIR_DATA_0, FIR_DATA_1, FIR_DATA_2, FIR_DATA_3 }
	vmov    FIR_COEFF_0, s0
	smuad	FIR_ACC0, FIR_DATA_0, FIR_COEFF_0
	vmov    FIR_COEFF_1, s1
	smuad	FIR_ACC1, FIR_DATA_1, FIR_COEFF_0
	smlad	FIR_ACC0, FIR_DATA_1, FIR_COEFF_1, FIR_ACC0
	vmov    FIR_COEFF_2, s2
	smuad	FIR_ACC2, FIR_DATA_2, FIR_COEFF_0
	smlad	FIR_ACC1, FIR_DATA_2, FIR_COEFF_1, FIR_ACC1
	smlad	FIR_ACC0, FIR_DATA_2, FIR_COEFF_2, FIR_ACC0
	vmov    FIR_COEFF_3, s3
	smuad	FIR_ACC3, FIR_DATA_3, FIR_COEFF_0
	smlad	FIR_ACC2, FIR_DATA_3, FIR_COEFF_1, FIR_ACC2
	smlad	FIR_ACC1, FIR_DATA_3, FIR_COEFF_2, FIR_ACC1
	smlad	FIR_ACC0, FIR_DATA_3, FIR_COEFF_3, FIR_ACC0

	ldm.w	FIR_INPUT!, { FIR_DATA_4, FIR_DATA_5, FIR_DATA_6, FIR_DATA_7 }
	vmov    FIR_COEFF_4, s4
	smlad	FIR_ACC3, FIR_DATA_4, FIR_COEFF_1, FIR_ACC3
	smlad	FIR_ACC2, FIR_DATA_4, FIR_COEFF_2, FIR_ACC2
	smlad	FIR_ACC1, FIR_DATA_4, FIR_COEFF_3, FIR_ACC1
	smlad	FIR_ACC0, FIR_DATA_4, FIR_COEFF_4, FIR_ACC0
	vmov    FIR_COEFF_5, s5
	smlad	FIR_ACC3, FIR_DATA_5, FIR_COEFF_2, FIR_ACC3
	smlad	FIR_ACC2, FIR_DATA_5, FIR_COEFF_3, FIR_ACC2
	smlad	FIR_ACC1, FIR_DATA_5, FIR_COEFF_4, FIR_ACC1
	smlad	FIR_ACC0, FIR_DATA_5, FIR_COEFF_5, FIR_ACC0
	vmov    FIR_COEFF_6, s6
	smlad	FIR_ACC3, FIR_DATA_6, FIR_COEFF_3, FIR_ACC3
	smlad	FIR_ACC2, FIR_DATA_6, FIR_COEFF_4, FIR_ACC2
	smlad	FIR_ACC1, FIR_DATA_6, FIR_COEFF_5, FIR_ACC1
	smlad	FIR_ACC0, FIR_DATA_6, FIR_COEFF_6, FIR_ACC0
	vmov    FIR_COEFF_7, s7
	smlad	FIR_ACC3, FIR_DATA_7, FIR_COEFF_4, FIR_ACC3
	smlad	FIR_ACC2, FIR_DATA_7, FIR_COEFF_5, FIR_ACC2
	smlad	FIR_ACC1, FIR_DATA_7, FIR_COEFF_6, FIR_ACC1
	smlad	FIR_ACC0, FIR_DATA_7, FIR_COEFF_7, FIR_ACC0

	ldm.w	FIR_INPUT!, { FIR_DATA_8, FIR_DATA_9, FIR_DATA_10, FIR_DATA_11 }
	vmov    FIR_COEFF_8, s8
	smlad	FIR_ACC3, FIR_DATA_8, FIR_COEFF_5, FIR_ACC3
	smlad	FIR_ACC2, FIR_DATA_8, FIR_COEFF_6, FIR_ACC2
	smlad	FIR_ACC1, FIR_DATA_8, FIR_COEFF_7, FIR_ACC1
	smlad	FIR_ACC0, FIR_DATA_8, FIR_COEFF_8, FIR_ACC0
	vmov    FIR_COEFF_9, s9
	smlad	FIR_ACC3, FIR_DATA_9, FIR_COEFF_6, FIR_ACC3
	smlad	FIR_ACC2, FIR_DATA_9, FIR_COEFF_7, FIR_ACC2
	smlad	FIR_ACC1, FIR_DATA_9, FIR_COEFF_8, FIR_ACC1
	smlad	FIR_ACC0, FIR_DATA_9, FIR_COEFF_9, FIR_ACC0
	vmov    FIR_COEFF_10, s10
	smlad	FIR_ACC3, FIR_DATA_10, FIR_COEFF_7, FIR_ACC3
	smlad	FIR_ACC2, FIR_DATA_10, FIR_COEFF_8, FIR_ACC2
	smlad	FIR_ACC1, FIR_DATA_10, FIR_COEFF_9, FIR_ACC1
	smlad	FIR_ACC0, FIR_DATA_10, FIR_COEFF_10, FIR_ACC0
	vmov    FIR_COEFF_11, s11
	smlad	FIR_ACC3, FIR_DATA_11, FIR_COEFF_8, FIR_ACC3
	smlad	FIR_ACC2, FIR_DATA_11, FIR_COEFF_9, FIR_ACC2
	smlad	FIR_ACC1, FIR_DATA_11, FIR_COEFF_10, FIR_ACC1
	smlad	FIR_ACC0, FIR_DATA_11, FIR_COEFF_11, FIR_ACC0

	ldm.w	FIR_INPUT!, { FIR_DATA_12, FIR_DATA_13, FIR_DATA_14, FIR_DATA_15 }
	vmov    FIR_COEFF_12, s12
	smlad	FIR_ACC3, FIR_DATA_12, FIR_COEFF_9, FIR_ACC3
	smlad	FIR_ACC2, FIR_DATA_12, FIR_COEFF_10, FIR_ACC2
	smlad	FIR_ACC1, FIR_DATA_12, FIR_COEFF_11, FIR_ACC1
	smlad	FIR_ACC0, FIR_DATA_12, FIR_COEFF_12, FIR_ACC0
	vmov    FIR_COEFF_13, s13
	smlad	FIR_ACC3, FIR_DATA_13, FIR_COEFF_10, FIR_ACC3
	smlad	FIR_ACC2, FIR_DATA_13, FIR_COEFF_11, FIR_ACC2
	smlad	FIR_ACC1, FIR_DATA_13, FIR_COEFF_12, FIR_ACC1
	smlad	FIR_ACC0, FIR_DATA_13, FIR_COEFF_13, FIR_ACC0
	vmov    FIR_COEFF_14, s14
	smlad	FIR_ACC3, FIR_DATA_14, FIR_COEFF_11, FIR_ACC3
	smlad	FIR_ACC2, FIR_DATA_14, FIR_COEFF_12, FIR_ACC2
	smlad	FIR_ACC1, FIR_DATA_14, FIR_COEFF_13, FIR_ACC1
	smlad	FIR_ACC0, FIR_DATA_14, FIR_COEFF_14, FIR_ACC0
	vmov    FIR_COEFF_15, s15
	smlad	FIR_ACC3, FIR_DATA_15, FIR_COEFF_12, FIR_ACC3
	smlad	FIR_ACC2, FIR_DATA_15, FIR_COEFF_13, FIR_ACC2
	smlad	FIR_ACC1, FIR_DATA_15, FIR_COEFF_14, FIR_ACC1
	smlad	FIR_ACC0, FIR_DATA_15, FIR_COEFF_15, FIR_ACC0

	ldm.w	FIR_INPUT!, { FIR_DATA_16, FIR_DATA_17, FIR_DATA_18, FIR_DATA_19 }
	// vmov    FIR_COEFF_16, s15
	smlad	FIR_ACC3, FIR_DATA_16, FIR_COEFF_13, FIR_ACC3
	smlad	FIR_ACC2, FIR_DATA_16, FIR_COEFF_14, FIR_ACC2
	smlad	FIR_ACC1, FIR_DATA_16, FIR_COEFF_15, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_16, FIR_COEFF_16, FIR_ACC0
	// vmov    FIR_COEFF_17, s14
	smlad	FIR_ACC3, FIR_DATA_17, FIR_COEFF_14, FIR_ACC3
	smlad	FIR_ACC2, FIR_DATA_17, FIR_COEFF_15, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_17, FIR_COEFF_16, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_17, FIR_COEFF_17, FIR_ACC0
	// vmov    FIR_COEFF_18, s13
	smlad	FIR_ACC3, FIR_DATA_18, FIR_COEFF_15, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_18, FIR_COEFF_16, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_18, FIR_COEFF_17, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_18, FIR_COEFF_18, FIR_ACC0
	// vmov    FIR_COEFF_19, s12
	smladx	FIR_ACC3, FIR_DATA_19, FIR_COEFF_16, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_19, FIR_COEFF_17, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_19, FIR_COEFF_18, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_19, FIR_COEFF_19, FIR_ACC0

	ldm.w	FIR_INPUT!, { FIR_DATA_20, FIR_DATA_21, FIR_DATA_22, FIR_DATA_23 }
	vmov    FIR_COEFF_20, s11
	smladx	FIR_ACC3, FIR_DATA_20, FIR_COEFF_17, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_20, FIR_COEFF_18, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_20, FIR_COEFF_19, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_20, FIR_COEFF_20, FIR_ACC0
	vmov    FIR_COEFF_21, s10
	smladx	FIR_ACC3, FIR_DATA_21, FIR_COEFF_18, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_21, FIR_COEFF_19, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_21, FIR_COEFF_20, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_21, FIR_COEFF_21, FIR_ACC0
	vmov    FIR_COEFF_22, s9
	smladx	FIR_ACC3, FIR_DATA_22, FIR_COEFF_19, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_22, FIR_COEFF_20, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_22, FIR_COEFF_21, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_22, FIR_COEFF_22, FIR_ACC0
	vmov    FIR_COEFF_23, s8
	smladx	FIR_ACC3, FIR_DATA_23, FIR_COEFF_20, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_23, FIR_COEFF_21, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_23, FIR_COEFF_22, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_23, FIR_COEFF_23, FIR_ACC0

	ldm.w	FIR_INPUT!, { FIR_DATA_24, FIR_DATA_25, FIR_DATA_26, FIR_DATA_27 }
	vmov    FIR_COEFF_24, s7
	smladx	FIR_ACC3, FIR_DATA_24, FIR_COEFF_21, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_24, FIR_COEFF_22, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_24, FIR_COEFF_23, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_24, FIR_COEFF_24, FIR_ACC0
	vmov    FIR_COEFF_25, s6
	smladx	FIR_ACC3, FIR_DATA_25, FIR_COEFF_22, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_25, FIR_COEFF_23, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_25, FIR_COEFF_24, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_25, FIR_COEFF_25, FIR_ACC0
	vmov    FIR_COEFF_26, s5
	smladx	FIR_ACC3, FIR_DATA_26, FIR_COEFF_23, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_26, FIR_COEFF_24, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_26, FIR_COEFF_25, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_26, FIR_COEFF_26, FIR_ACC0
	vmov    FIR_COEFF_27, s4
	smladx	FIR_ACC3, FIR_DATA_27, FIR_COEFF_24, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_27, FIR_COEFF_25, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_27, FIR_COEFF_26, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_27, FIR_COEFF_27, FIR_ACC0

	ldm.w	FIR_INPUT!, { FIR_DATA_28, FIR_DATA_29, FIR_DATA_30, FIR_DATA_31 }
	vmov    FIR_COEFF_28, s3
	smladx	FIR_ACC3, FIR_DATA_28, FIR_COEFF_25, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_28, FIR_COEFF_26, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_28, FIR_COEFF_27, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_28, FIR_COEFF_28, FIR_ACC0
	vmov    FIR_COEFF_29, s2
	smladx	FIR_ACC3, FIR_DATA_29, FIR_COEFF_26, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_29, FIR_COEFF_27, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_29, FIR_COEFF_28, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_29, FIR_COEFF_29, FIR_ACC0
	vmov    FIR_COEFF_30, s1
	smladx	FIR_ACC3, FIR_DATA_30, FIR_COEFF_27, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_30, FIR_COEFF_28, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_30, FIR_COEFF_29, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_30, FIR_COEFF_30, FIR_ACC0
	vmov    FIR_COEFF_31, s0
	smladx	FIR_ACC3, FIR_DATA_31, FIR_COEFF_28, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_31, FIR_COEFF_29, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_31, FIR_COEFF_30, FIR_ACC1
	smladx	FIR_ACC0, FIR_DATA_31, FIR_COEFF_31, FIR_ACC0

	ldm.w	FIR_INPUT!, { FIR_DATA_32, FIR_DATA_33, FIR_DATA_34 }
	smladx	FIR_ACC3, FIR_DATA_32, FIR_COEFF_29, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_32, FIR_COEFF_30, FIR_ACC2
	smladx	FIR_ACC1, FIR_DATA_32, FIR_COEFF_31, FIR_ACC1
	smladx	FIR_ACC3, FIR_DATA_33, FIR_COEFF_30, FIR_ACC3
	smladx	FIR_ACC2, FIR_DATA_33, FIR_COEFF_31, FIR_ACC2
	smladx	FIR_ACC3, FIR_DATA_34, FIR_COEFF_31, FIR_ACC3

	ldr.w	FIR_STATE, [sp, #FIR_STACK_STATE]
	ldm.w	FIR_STATE, { IIR_Y, IIR_X, IIR_A1, IIR_B0, IIR_B1, IIR_GAIN }

	smmulr  IIR_Y, IIR_Y, IIR_A1
	smmlar  IIR_Y, FIR_ACC0, IIR_B0, IIR_Y
	smmlar  IIR_Y, IIR_X, IIR_B1, IIR_Y
	ssat	IIR_Y, #31, IIR_Y, LSL #2

	smmulr  IIR_Y, IIR_Y, IIR_A1
	smmlar  IIR_Y, FIR_ACC1, IIR_B0, IIR_Y
	smmlar  IIR_Y, FIR_ACC0, IIR_B1, IIR_Y
	ssat	IIR_Y, #31, IIR_Y, LSL #2

	smmulr  IIR_Y, IIR_Y, IIR_A1
	smmlar  IIR_Y, FIR_ACC2, IIR_B0, IIR_Y
	smmlar  IIR_Y, FIR_ACC1, IIR_B1, IIR_Y
	ssat	IIR_Y, #31, IIR_Y, LSL #2

	smmulr  IIR_Y, IIR_Y, IIR_A1
	smmlar  IIR_Y, FIR_ACC3, IIR_B0, IIR_Y
	smmlar  IIR_Y, FIR_ACC2, IIR_B1, IIR_Y
	ssat	IIR_Y, #31, IIR_Y, LSL #2
	
	stm	FIR_STATE, { IIR_Y, FIR_ACC3 }
	
	sub	FIR_INPUT, #((35-4)*4)
	ldr	r1, [sp, #FIR_STACK_INPUT_E]
	cmp	FIR_INPUT, r1
	bne	1b

	ldr.w	r0, [sp, #FIR_STACK_INPUT]
	vldm	r1!, { s0-s15 }
	vstm	r0!, { s0-s15 }
	vldm	r1!, { s0-s15 }
	vstm	r0!, { s0-s15 }

	pop.w	{ r3 }
	msr	CONTROL, r3 
	
	pop.w	{ r1-r3, r4-r11, pc }
	
