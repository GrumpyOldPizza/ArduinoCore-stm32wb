/*
 * Copyright (c) 2023 Thomas Roell.  All rights reserved.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal with the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 *  1. Redistributions of source code must retain the above copyright notice,
 *     this list of conditions and the following disclaimers.
 *  2. Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimers in the
 *     documentation and/or other materials provided with the distribution.
 *  3. Neither the name of Thomas Roell, nor the names of its contributors
 *     may be used to endorse or promote products derived from this Software
 *     without specific prior written permission.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE
 * CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * WITH THE SOFTWARE.
 */

#include "Arduino.h"
#include "wiring_private.h"

#define PWM_INSTANCE_TIM1      0
#define PWM_INSTANCE_TIM2      1
#define PWM_INSTANCE_TIM16     2
#define PWM_INSTANCE_TIM17     3

/*
 * EXTI 0      PC0  RX
 * EXTI 1      PE1  DRDY      (STTS22H)
 * EXTI 2      PD2  INT1      (ISM330DHCX)
 * EXTI 3      PE3  STMOD_INT
 * EXTI 4      PE4  D4
 * EXTI 5
 * EXTI 6      PA6  MODEM_CTS
 * EXTI 7
 * EXTI 8      PD8  STMOD_RST
 * EXTI 9      PD9  INT2      (VL53L0X)
 * EXTI 10     PB10 D5
 * EXTI 11     
 * EXTI 12     PD12 D2
 * EXTI 13     PD13 D8
 * EXTI 14     PD14 D3
 * EXTI 15     PD15 D9
 */

/*
 * Pins descriptions
 */
extern const PinDescription g_APinDescription[PINS_COUNT] =
{
    // 0..1 - UART (RX, TX) [ARD, MIK, STMOD]
    { GPIOC, STM32WB_GPIO_PIN_MASK(STM32WB_GPIO_PIN_PC0),  STM32WB_GPIO_PIN_PC0,            (PIN_ATTR_EXTI),                  PWM_INSTANCE_NONE,  PWM_CHANNEL_NONE, ADC_CHANNEL_NONE },
    { GPIOB, STM32WB_GPIO_PIN_MASK(STM32WB_GPIO_PIN_PB5),  STM32WB_GPIO_PIN_PB5,            0,                                PWM_INSTANCE_NONE,  PWM_CHANNEL_NONE, ADC_CHANNEL_NONE },

    // 2..9 - Digital [ARD]
    { GPIOD, STM32WB_GPIO_PIN_MASK(STM32WB_GPIO_PIN_PD12), STM32WB_GPIO_PIN_PD12,           (PIN_ATTR_EXTI),                  PWM_INSTANCE_NONE,  PWM_CHANNEL_NONE, ADC_CHANNEL_NONE },
    { GPIOD, STM32WB_GPIO_PIN_MASK(STM32WB_GPIO_PIN_PD14), STM32WB_GPIO_PIN_PD14_TIM1_CH1,  (PIN_ATTR_EXTI),                  PWM_INSTANCE_TIM1,  PWM_CHANNEL_1,    ADC_CHANNEL_NONE },
    { GPIOE, STM32WB_GPIO_PIN_MASK(STM32WB_GPIO_PIN_PE4),  STM32WB_GPIO_PIN_PE4,            (PIN_ATTR_EXTI),                  PWM_INSTANCE_NONE,  PWM_CHANNEL_NONE, ADC_CHANNEL_NONE },
    { GPIOB, STM32WB_GPIO_PIN_MASK(STM32WB_GPIO_PIN_PB10), STM32WB_GPIO_PIN_PB10_TIM2_CH3,  (PIN_ATTR_EXTI),                  PWM_INSTANCE_TIM2,  PWM_CHANNEL_3,    ADC_CHANNEL_NONE },
    { GPIOE, STM32WB_GPIO_PIN_MASK(STM32WB_GPIO_PIN_PE0),  STM32WB_GPIO_PIN_PE0_TIM16_CH1,  0,                                PWM_INSTANCE_TIM16, PWM_CHANNEL_1,    ADC_CHANNEL_NONE },
    { GPIOB, STM32WB_GPIO_PIN_MASK(STM32WB_GPIO_PIN_PB2),  STM32WB_GPIO_PIN_PB2,            0,                                PWM_INSTANCE_NONE,  PWM_CHANNEL_NONE, ADC_CHANNEL_NONE },
    { GPIOD, STM32WB_GPIO_PIN_MASK(STM32WB_GPIO_PIN_PD13), STM32WB_GPIO_PIN_PD13,           (PIN_ATTR_EXTI),                  PWM_INSTANCE_NONE,  PWM_CHANNEL_NONE, ADC_CHANNEL_NONE },
    { GPIOD, STM32WB_GPIO_PIN_MASK(STM32WB_GPIO_PIN_PD15), STM32WB_GPIO_PIN_PD15_TIM1_CH2,  (PIN_ATTR_EXTI),                  PWM_INSTANCE_TIM1,  PWM_CHANNEL_2,    ADC_CHANNEL_NONE },

    // 10..13 - SPI (CS, MOSI, MISO, SCK) [ARD]
    { GPIOA, STM32WB_GPIO_PIN_MASK(STM32WB_GPIO_PIN_PA4),  STM32WB_GPIO_PIN_PA4,            0,                                PWM_INSTANCE_NONE,  PWM_CHANNEL_NONE, ADC_CHANNEL_NONE },
    { GPIOA, STM32WB_GPIO_PIN_MASK(STM32WB_GPIO_PIN_PA7),  STM32WB_GPIO_PIN_PA7_TIM17_CH1,  0,                                PWM_INSTANCE_TIM17, PWM_CHANNEL_1,    ADC_CHANNEL_NONE },
    { GPIOB, STM32WB_GPIO_PIN_MASK(STM32WB_GPIO_PIN_PB4),  STM32WB_GPIO_PIN_PB4,            0,                                PWM_INSTANCE_NONE,  PWM_CHANNEL_NONE, ADC_CHANNEL_NONE },
    { GPIOA, STM32WB_GPIO_PIN_MASK(STM32WB_GPIO_PIN_PA1),  STM32WB_GPIO_PIN_PA1_TIM2_CH2,   0,                                PWM_INSTANCE_TIM2,  PWM_CHANNEL_2,    ADC_CHANNEL_NONE },

    // 14..15 - I2C (SDA,SCL) [ARD, STMOD]
    { GPIOA, STM32WB_GPIO_PIN_MASK(STM32WB_GPIO_PIN_PA10), STM32WB_GPIO_PIN_PA10,           0,                                PWM_INSTANCE_NONE,  PWM_CHANNEL_NONE, ADC_CHANNEL_NONE },
    { GPIOB, STM32WB_GPIO_PIN_MASK(STM32WB_GPIO_PIN_PB8),  STM32WB_GPIO_PIN_PB8,            0,                                PWM_INSTANCE_NONE,  PWM_CHANNEL_NONE, ADC_CHANNEL_NONE },

    // 16..21 - Analog [ARD]
    { GPIOC, STM32WB_GPIO_PIN_MASK(STM32WB_GPIO_PIN_PC3),  STM32WB_GPIO_PIN_PC3,            0,                                PWM_INSTANCE_NONE,  PWM_CHANNEL_NONE, ADC_CHANNEL_4    },
    { GPIOA, STM32WB_GPIO_PIN_MASK(STM32WB_GPIO_PIN_PA2),  STM32WB_GPIO_PIN_PA2,            (PIN_ATTR_WKUP4),                 PWM_INSTANCE_NONE,  PWM_CHANNEL_NONE, ADC_CHANNEL_7    },
    { GPIOA, STM32WB_GPIO_PIN_MASK(STM32WB_GPIO_PIN_PA5),  STM32WB_GPIO_PIN_PA5,            0,                                PWM_INSTANCE_NONE,  PWM_CHANNEL_NONE, ADC_CHANNEL_10   },
    { GPIOC, STM32WB_GPIO_PIN_MASK(STM32WB_GPIO_PIN_PC1),  STM32WB_GPIO_PIN_PC1,            0,                                PWM_INSTANCE_NONE,  PWM_CHANNEL_NONE, ADC_CHANNEL_2    },
    { GPIOC, STM32WB_GPIO_PIN_MASK(STM32WB_GPIO_PIN_PC4),  STM32WB_GPIO_PIN_PC4,            0,                                PWM_INSTANCE_NONE,  PWM_CHANNEL_NONE, ADC_CHANNEL_13   },
    { GPIOC, STM32WB_GPIO_PIN_MASK(STM32WB_GPIO_PIN_PC5),  STM32WB_GPIO_PIN_PC5,            (PIN_ATTR_WKUP5),                 PWM_INSTANCE_NONE,  PWM_CHANNEL_NONE, ADC_CHANNEL_14   },

    // 22..25 - SPI (CS, MOSI, MISO, SCK) [STMOD]
    { GPIOA, STM32WB_GPIO_PIN_MASK(STM32WB_GPIO_PIN_PA6),  STM32WB_GPIO_PIN_PA6,            (PIN_ATTR_EXTI),                  PWM_INSTANCE_NONE,  PWM_CHANNEL_NONE, ADC_CHANNEL_NONE },
    { GPIOB, STM32WB_GPIO_PIN_MASK(STM32WB_GPIO_PIN_PB15), STM32WB_GPIO_PIN_PB15,           0,                                PWM_INSTANCE_NONE,  PWM_CHANNEL_NONE, ADC_CHANNEL_NONE },
    { GPIOB, STM32WB_GPIO_PIN_MASK(STM32WB_GPIO_PIN_PB14), STM32WB_GPIO_PIN_PB14,           0,                                PWM_INSTANCE_NONE,  PWM_CHANNEL_NONE, ADC_CHANNEL_NONE },
    { GPIOD, STM32WB_GPIO_PIN_MASK(STM32WB_GPIO_PIN_PD1),  STM32WB_GPIO_PIN_PD1,            0,                                PWM_INSTANCE_NONE,  PWM_CHANNEL_NONE, ADC_CHANNEL_NONE },

    // 26..29 - INT, RST, AN, PWM  [STMOD]
    { GPIOE, STM32WB_GPIO_PIN_MASK(STM32WB_GPIO_PIN_PE3),  STM32WB_GPIO_PIN_PE3,            (PIN_ATTR_EXTI),                  PWM_INSTANCE_NONE,  PWM_CHANNEL_NONE, ADC_CHANNEL_NONE },
    { GPIOD, STM32WB_GPIO_PIN_MASK(STM32WB_GPIO_PIN_PD8),  STM32WB_GPIO_PIN_PD8,            (PIN_ATTR_EXTI),                  PWM_INSTANCE_NONE,  PWM_CHANNEL_NONE, ADC_CHANNEL_NONE },
    { GPIOA, STM32WB_GPIO_PIN_MASK(STM32WB_GPIO_PIN_PA0),  STM32WB_GPIO_PIN_PA0,            (PIN_ATTR_WKUP1 | PIN_ATTR_TAMP), PWM_INSTANCE_NONE,  PWM_CHANNEL_NONE, ADC_CHANNEL_5    },
    { GPIOA, STM32WB_GPIO_PIN_MASK(STM32WB_GPIO_PIN_PA15), STM32WB_GPIO_PIN_PA15_TIM2_CH1,  0,                                PWM_INSTANCE_TIM2,  PWM_CHANNEL_1,    ADC_CHANNEL_NONE },

    // 30..31 - GPIO [STMOD]
    { GPIOC, STM32WB_GPIO_PIN_MASK(STM32WB_GPIO_PIN_PC11), STM32WB_GPIO_PIN_PC11,           0,                                PWM_INSTANCE_NONE,  PWM_CHANNEL_NONE, ADC_CHANNEL_NONE },
    { GPIOC, STM32WB_GPIO_PIN_MASK(STM32WB_GPIO_PIN_PC10), STM32WB_GPIO_PIN_PC10,           0,                                PWM_INSTANCE_NONE,  PWM_CHANNEL_NONE, ADC_CHANNEL_NONE },
    
    // 32..34 - OLED (CS, DC, RST) [DISCO] [SPI on ARD]
    { GPIOH, STM32WB_GPIO_PIN_MASK(STM32WB_GPIO_PIN_PH0),  STM32WB_GPIO_PIN_PH0,            0,                                PWM_INSTANCE_NONE,  PWM_CHANNEL_NONE, ADC_CHANNEL_NONE },
    { GPIOC, STM32WB_GPIO_PIN_MASK(STM32WB_GPIO_PIN_PC9),  STM32WB_GPIO_PIN_PC9,            0,                                PWM_INSTANCE_NONE,  PWM_CHANNEL_NONE, ADC_CHANNEL_NONE },
    { GPIOC, STM32WB_GPIO_PIN_MASK(STM32WB_GPIO_PIN_PC8),  STM32WB_GPIO_PIN_PC8,            0,                                PWM_INSTANCE_NONE,  PWM_CHANNEL_NONE, ADC_CHANNEL_NONE },

    // 35..37 - MEMS (DRDY, INT1, INT2) [DISCO]
    { GPIOE, STM32WB_GPIO_PIN_MASK(STM32WB_GPIO_PIN_PE1),  STM32WB_GPIO_PIN_PE1,            (PIN_ATTR_EXTI),                  PWM_INSTANCE_NONE,  PWM_CHANNEL_NONE, ADC_CHANNEL_NONE },
    { GPIOD, STM32WB_GPIO_PIN_MASK(STM32WB_GPIO_PIN_PD2),  STM32WB_GPIO_PIN_PD2,            (PIN_ATTR_EXTI),                  PWM_INSTANCE_NONE,  PWM_CHANNEL_NONE, ADC_CHANNEL_NONE },
    { GPIOD, STM32WB_GPIO_PIN_MASK(STM32WB_GPIO_PIN_PD9),  STM32WB_GPIO_PIN_PD9,            (PIN_ATTR_EXTI),                  PWM_INSTANCE_NONE,  PWM_CHANNEL_NONE, ADC_CHANNEL_NONE },

    // 38..39 - SELECT (GPIO_SELECT1, GPIO_SELECT2) [DISCO] // GPIO_SELECT1 == 0 : STMOD, 1 : ARD, GPIO_SELECT2 == 1 : ARD_MOSI to TLC59731
    { GPIOE, STM32WB_GPIO_PIN_MASK(STM32WB_GPIO_PIN_PE2),  STM32WB_GPIO_PIN_PE2,            0,                                PWM_INSTANCE_NONE,  PWM_CHANNEL_NONE, ADC_CHANNEL_NONE },
    { GPIOH, STM32WB_GPIO_PIN_MASK(STM32WB_GPIO_PIN_PH1),  STM32WB_GPIO_PIN_PH1,            0,                                PWM_INSTANCE_NONE,  PWM_CHANNEL_NONE, ADC_CHANNEL_NONE },

    // 40..41 - BUTTON (BUTTON1, BUTTON12) [DISCO]
    { GPIOC, STM32WB_GPIO_PIN_MASK(STM32WB_GPIO_PIN_PC12), STM32WB_GPIO_PIN_PC12,           (PIN_ATTR_WKUP3 | PIN_ATTR_TAMP), PWM_INSTANCE_NONE,  PWM_CHANNEL_NONE, ADC_CHANNEL_NONE },
    { GPIOC, STM32WB_GPIO_PIN_MASK(STM32WB_GPIO_PIN_PC13), STM32WB_GPIO_PIN_PC13,           (PIN_ATTR_WKUP2 | PIN_ATTR_TAMP), PWM_INSTANCE_NONE,  PWM_CHANNEL_NONE, ADC_CHANNEL_NONE },
};

extern const unsigned int g_PWMInstances[PWM_INSTANCE_COUNT] = {
    STM32WB_TIM_INSTANCE_TIM1,
    STM32WB_TIM_INSTANCE_TIM2,
    STM32WB_TIM_INSTANCE_TIM16,
    STM32WB_TIM_INSTANCE_TIM17,
};

static uint8_t stm32wb_lpuart1_rx_fifo[32];

extern const stm32wb_uart_params_t g_Serial1Params = {
    STM32WB_UART_INSTANCE_LPUART1,
    STM32WB_UART_IRQ_PRIORITY,
    (STM32WB_DMA_CHANNEL_DMA1_CH4_INDEX | STM32WB_DMA_CHANNEL_SELECT_LPUART1_RX),
    (STM32WB_DMA_CHANNEL_DMA1_CH5_INDEX | STM32WB_DMA_CHANNEL_SELECT_LPUART1_TX),
    &stm32wb_lpuart1_rx_fifo[0],
    sizeof(stm32wb_lpuart1_rx_fifo),
    {
        STM32WB_GPIO_PIN_PC0_LPUART1_RX,
        STM32WB_GPIO_PIN_PB5_LPUART1_TX,
        STM32WB_GPIO_PIN_PD1,
        STM32WB_GPIO_PIN_PA6_LPUART1_CTS,
        STM32WB_GPIO_PIN_NONE,
    },
};

extern const stm32wb_uart_params_t g_Serial2Params = {
    STM32WB_UART_INSTANCE_USART1,
    STM32WB_UART_IRQ_PRIORITY,
    STM32WB_DMA_CHANNEL_NONE,
    STM32WB_DMA_CHANNEL_NONE,
    NULL,
    0,
    {
        STM32WB_GPIO_PIN_PB7_USART1_RX,
        STM32WB_GPIO_PIN_PB6_USART1_TX,
        STM32WB_GPIO_PIN_NONE,
        STM32WB_GPIO_PIN_NONE,
        STM32WB_GPIO_PIN_NONE,
    },
};

extern const stm32wb_spi_params_t g_SPIParams = {
    STM32WB_SPI_INSTANCE_SPI1,
    STM32WB_SPI_IRQ_PRIORITY,
    (STM32WB_DMA_CHANNEL_DMA2_CH3_INDEX | STM32WB_DMA_CHANNEL_SELECT_SPI1_RX),
    (STM32WB_DMA_CHANNEL_DMA2_CH4_INDEX | STM32WB_DMA_CHANNEL_SELECT_SPI1_TX),
    {
        STM32WB_GPIO_PIN_PA7_SPI1_MOSI,
        STM32WB_GPIO_PIN_PB4_SPI1_MISO,
        STM32WB_GPIO_PIN_PA1_SPI1_SCK,
    },
};

extern const stm32wb_spi_params_t g_SPI1Params = {
    STM32WB_SPI_INSTANCE_SPI2,
    STM32WB_SPI_IRQ_PRIORITY,
    (STM32WB_DMA_CHANNEL_DMA2_CH5_INDEX | STM32WB_DMA_CHANNEL_SELECT_SPI2_RX),
    (STM32WB_DMA_CHANNEL_DMA2_CH6_INDEX | STM32WB_DMA_CHANNEL_SELECT_SPI2_TX),
    {
        STM32WB_GPIO_PIN_PB15_SPI2_MOSI,
        STM32WB_GPIO_PIN_PB14_SPI2_MISO,
        STM32WB_GPIO_PIN_PD1_SPI2_SCK,
    },
};

extern const stm32wb_i2c_params_t g_WireParams = {
    STM32WB_I2C_INSTANCE_I2C1,
    STM32WB_I2C_IRQ_PRIORITY,
    (STM32WB_DMA_CHANNEL_DMA1_CH6_INDEX | STM32WB_DMA_CHANNEL_SELECT_I2C1_RX),
    STM32WB_DMA_CHANNEL_NONE,
    {
        STM32WB_GPIO_PIN_PB8_I2C1_SCL,
        STM32WB_GPIO_PIN_PA10_I2C1_SDA,
    },
};

extern const stm32wb_i2c_params_t g_Wire1Params = {
    STM32WB_I2C_INSTANCE_I2C3,
    STM32WB_I2C_IRQ_PRIORITY,
    (STM32WB_DMA_CHANNEL_DMA1_CH7_INDEX | STM32WB_DMA_CHANNEL_SELECT_I2C3_RX),
    STM32WB_DMA_CHANNEL_NONE,
    {
        STM32WB_GPIO_PIN_PB13_I2C3_SCL,
        STM32WB_GPIO_PIN_PB11_I2C3_SDA,
    },
};

extern const stm32wb_sai_params_t g_PDMParams = {
    STM32WB_SAI_INSTANCE_SAI1,
    STM32WB_SAI_IRQ_PRIORITY,
    (STM32WB_DMA_CHANNEL_DMA2_CH1_INDEX | STM32WB_DMA_CHANNEL_SELECT_SAI1_A),
    (STM32WB_SAI_CONFIG_BLOCK_A | STM32WB_SAI_CONFIG_PDM_DI2),
    {
        STM32WB_GPIO_PIN_PA8_SAI1_PDM_CK2,
        STM32WB_GPIO_PIN_PA9_SAI1_PDM_DI2,
        STM32WB_GPIO_PIN_NONE,
        STM32WB_GPIO_PIN_NONE,
    },
};


extern const stm32wb_system_info_t stm32wb_system_info =
{
    .version           	= STM32WB_SYSTEM_VERSION,
    .options            = (STM32WB_SYSTEM_OPTION_DFU_USB | STM32WB_SYSTEM_OPTION_SMPS_INDUCTOR_10uH | STM32WB_SYSTEM_OPTION_SMPS_CURRENT_220mA | STM32WB_SYSTEM_OPTION_LSE_MODE_2),
    .hseclk             = 32000000,
    .lseclk             = 32774,
    .pins               = {
        .status         = STM32WB_GPIO_PIN_NONE,
        .boost          = STM32WB_GPIO_PIN_NONE,
        .dfu            = STM32WB_GPIO_PIN_PC12,
        .usb_vbus       = STM32WB_GPIO_PIN_NONE,
        .uart_rx        = STM32WB_GPIO_PIN_NONE,
        .uart_tx        = STM32WB_GPIO_PIN_NONE,
        .sflash_cs      = STM32WB_GPIO_PIN_PD3_QUADSPI_NCS,
        .sflash_clk     = STM32WB_GPIO_PIN_PA3_QUADSPI_CLK,
        .sflash_mosi    = STM32WB_GPIO_PIN_PB9_QUADSPI_IO0,
        .sflash_miso    = STM32WB_GPIO_PIN_PD5_QUADSPI_IO1,
        .sflash_wp      = STM32WB_GPIO_PIN_PD6_QUADSPI_IO2,
        .sflash_hold    = STM32WB_GPIO_PIN_PD7_QUADSPI_IO3,
        .sflash_enable  = STM32WB_GPIO_PIN_NONE
    }
};

void initVariant()
{
    stm32wb_sfsqi_initialize();
}

